(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    238281,       4837]
NotebookOptionsPosition[    236758,       4806]
NotebookOutlinePosition[    237131,       4822]
CellTagsIndexPosition[    237088,       4819]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Solver", " ", "for", " ", "Kerr", " ", "Geodesics"}], " ", "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"G", " ", "=", " ", 
    RowBox[{"c", " ", "=", " ", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"1", " ", "=", 
       RowBox[{
        RowBox[{">", " ", "r_s"}], " ", "=", " ", 
        RowBox[{"2", " ", "|", " ", 
         RowBox[{"BL", " ", "Coords"}]}]}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"coords", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", "=", 
     RowBox[{"Length", "[", "coords", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tt", " ", "=", " ", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"r", " ", "/", " ", "\[CapitalSigma]"}]}], " ", "-", " ", 
      "1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rr", " ", "=", " ", 
     RowBox[{"\[CapitalSigma]", "/", "\[CapitalDelta]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]\[Theta]", "=", "\[CapitalSigma]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[CurlyPhi]\[CurlyPhi]", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", "^", "2"}], "+", 
             RowBox[{"a", "^", "2"}]}], ")"}]}], ")"}], "/", 
         "\[CapitalSigma]"}]}], ")"}], " ", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"t\[CurlyPhi]", "=", 
     RowBox[{
      RowBox[{"\[Minus]", "4"}], "a", " ", "r", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}], "/", 
       "\[CapitalSigma]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"gdd", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tt", ",", "0", ",", "0", ",", 
         RowBox[{"t\[CurlyPhi]", "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "rr", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "\[Theta]\[Theta]", ",", "0"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t\[CurlyPhi]", "/", "2"}], ",", "0", ",", "0", ",", 
         "\[CurlyPhi]\[CurlyPhi]"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Simplify", "[", "gdd", "]"}], "//", "MatrixForm"}], "\n", 
   RowBox[{
    RowBox[{"guu", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Inverse", "[", "gdd", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"guu", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.8048703388398175`*^9, 3.8048705437194653`*^9}, {
   3.8048707291294985`*^9, 3.804870872116582*^9}, {3.804870911304493*^9, 
   3.804870925449597*^9}, {3.804870966057716*^9, 3.8048709784346876`*^9}, {
   3.804871055424495*^9, 3.8048710627393656`*^9}, {3.804871183541532*^9, 
   3.8048711895458117`*^9}, 3.804874011782137*^9, {3.804908037753749*^9, 
   3.8049080487103715`*^9}, 3.804908197499875*^9, {3.8049083731665225`*^9, 
   3.8049083761395035`*^9}, {3.804909906812749*^9, 3.8049099201360292`*^9}, {
   3.8049224076003065`*^9, 3.804922408469865*^9}, {3.804922458410448*^9, 
   3.8049224755208807`*^9}, {3.8049225055470557`*^9, 
   3.8049225056512995`*^9}, {3.8049239576841407`*^9, 3.8049239623634696`*^9}, 
   3.8049276090067053`*^9, 3.8049337759855084`*^9, {3.804935166065634*^9, 
   3.804935220609595*^9}, 3.804935258241789*^9, {3.8055496898873186`*^9, 
   3.805549692094226*^9}, {3.8069906197465725`*^9, 3.8069906352071595`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"5e61d268-cdab-4b77-a61d-5465a2ffbd3a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        RowBox[{"2", " ", "r"}], 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "a", " ", "r", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}]},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}]], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "a", " ", "r", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "0", "0", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "-", 
         RowBox[{"2", " ", "r"}], "+", 
         SuperscriptBox["r", "2"], "+", 
         FractionBox[
          RowBox[{"2", " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             SuperscriptBox["r", "2"]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.804870545555223*^9, 3.8048708235260897`*^9, 3.8048708790366316`*^9, {
   3.8048709182965674`*^9, 3.8048709400079374`*^9}, 3.8048709919630337`*^9, 
   3.8048710641974235`*^9, 3.804871153529524*^9, 3.804871191071127*^9, 
   3.8048713352396183`*^9, 3.8048725178203907`*^9, 3.804872633767274*^9, {
   3.804874004710388*^9, 3.804874028502098*^9}, 3.8048745081253953`*^9, 
   3.8048759460012684`*^9, 3.804876847826188*^9, 3.8049081385078573`*^9, 
   3.804908222345485*^9, {3.8049083028587847`*^9, 3.8049083199078054`*^9}, 
   3.804908412216284*^9, 3.804909004319951*^9, 3.804909946905669*^9, 
   3.80491198263358*^9, 3.8049120301206884`*^9, {3.80491232982808*^9, 
   3.80491235135458*^9}, {3.80492241850134*^9, 3.804922532265874*^9}, 
   3.804924006713752*^9, 3.804924079838291*^9, 3.804927369913843*^9, 
   3.80492754339032*^9, 3.804932064442975*^9, 3.8049322856785326`*^9, 
   3.804934329464013*^9, 3.8049352826404467`*^9, 3.804936053643572*^9, 
   3.8055193381788445`*^9, 3.8055350450438476`*^9, 3.805549692637039*^9, 
   3.80578702629517*^9, 3.8057933598473177`*^9, 3.8057934212079973`*^9, 
   3.80699063888737*^9},
 CellLabel->
  "Out[57]//MatrixForm=",ExpressionUUID->"269eef8f-0fbd-4b5e-beee-\
5a9a0a7698cf"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "4"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", "r", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "r"}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], 
            " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["r", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"]}]]}], 
      "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "a", " ", "r"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["r", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}]},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], "0", "0"},
     {"0", "0", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "a", " ", "r"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["r", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}], "0", "0", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.804870545555223*^9, 3.8048708235260897`*^9, 3.8048708790366316`*^9, {
   3.8048709182965674`*^9, 3.8048709400079374`*^9}, 3.8048709919630337`*^9, 
   3.8048710641974235`*^9, 3.804871153529524*^9, 3.804871191071127*^9, 
   3.8048713352396183`*^9, 3.8048725178203907`*^9, 3.804872633767274*^9, {
   3.804874004710388*^9, 3.804874028502098*^9}, 3.8048745081253953`*^9, 
   3.8048759460012684`*^9, 3.804876847826188*^9, 3.8049081385078573`*^9, 
   3.804908222345485*^9, {3.8049083028587847`*^9, 3.8049083199078054`*^9}, 
   3.804908412216284*^9, 3.804909004319951*^9, 3.804909946905669*^9, 
   3.80491198263358*^9, 3.8049120301206884`*^9, {3.80491232982808*^9, 
   3.80491235135458*^9}, {3.80492241850134*^9, 3.804922532265874*^9}, 
   3.804924006713752*^9, 3.804924079838291*^9, 3.804927369913843*^9, 
   3.80492754339032*^9, 3.804932064442975*^9, 3.8049322856785326`*^9, 
   3.804934329464013*^9, 3.8049352826404467`*^9, 3.804936053643572*^9, 
   3.8055193381788445`*^9, 3.8055350450438476`*^9, 3.805549692637039*^9, 
   3.80578702629517*^9, 3.8057933598473177`*^9, 3.8057934212079973`*^9, 
   3.806990639032369*^9},
 CellLabel->
  "Out[59]//MatrixForm=",ExpressionUUID->"cb2b5778-bcb8-46be-a51b-\
c262767c90ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalSigma]", "=", 
   RowBox[{
    RowBox[{"r", "^", "2"}], "+", 
    RowBox[{
     RowBox[{"a", "^", "2"}], " ", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", "=", 
   RowBox[{
    RowBox[{"r", "^", "2"}], "-", 
    RowBox[{"2", " ", "r"}], "+", 
    RowBox[{"a", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"christoffels", ":=", 
   RowBox[{"christoffels", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", " ", "/", " ", "2"}], ")"}], "*", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"guu", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "s"}], "]"}], "]"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"gdd", "[", 
                RowBox[{"[", 
                 RowBox[{"s", ",", "j"}], "]"}], "]"}], ",", 
               RowBox[{"coords", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "+", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"gdd", "[", 
                RowBox[{"[", 
                 RowBox[{"s", ",", "k"}], "]"}], "]"}], ",", 
               RowBox[{"coords", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "\[Minus]", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"gdd", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "k"}], "]"}], "]"}], ",", 
               RowBox[{"coords", "[", 
                RowBox[{"[", "s", "]"}], "]"}]}], "]"}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"s", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listchristoffels", ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"UnsameQ", "[", 
        RowBox[{
         RowBox[{"christoffels", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], ",", "0"}], "]"}],
        ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"\[CapitalGamma]", "[", 
           RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], ",", " ", 
         RowBox[{"christoffels", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}]}], "}"}]}], "]"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "n"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"k", ",", " ", "1", ",", " ", "j"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TableForm", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "listchristoffels", "]"}], ",", "Null"}], 
       "]"}], ",", "2"}], "]"}], ",", 
    RowBox[{"TableSpacing", "\[RightArrow]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"geodesic", ":=", 
   RowBox[{"geodesic", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Minus]", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"christoffels", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], " ", 
           RowBox[{
            RowBox[{"coords", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "'"}], " ", 
           RowBox[{
            RowBox[{"coords", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "'"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listgeodesic", ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<d/d\[Lambda]\>\"", 
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"coords", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "'"}], "]"}]}], ",", "\"\<=\>\"", 
       ",", " ", 
       RowBox[{"geodesic", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "listgeodesic", "]"}], ",", "Null"}], "]"}], 
     ",", "2"}], "]"}], ",", 
   RowBox[{"TableSpacing", "\[RightArrow]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.804871124394963*^9, 3.804871125061149*^9}, {
   3.8048711969545784`*^9, 3.804871197641242*^9}, {3.804871244477103*^9, 
   3.8048713201207085`*^9}, {3.8048713733509436`*^9, 
   3.8048714163192205`*^9}, {3.804871446885745*^9, 3.804871468694947*^9}, {
   3.804872683621151*^9, 3.8048726844086*^9}, {3.804874538015137*^9, 
   3.804874547932458*^9}, {3.8049080600725827`*^9, 3.804908065864792*^9}, {
   3.804909922643757*^9, 3.8049099361807833`*^9}, {3.8049100330342665`*^9, 
   3.8049100453252797`*^9}, {3.8049103001311183`*^9, 3.80491030032244*^9}, {
   3.804911958128563*^9, 3.804912010775148*^9}, {3.804912260751117*^9, 
   3.8049122708735123`*^9}, {3.804912327334833*^9, 3.804912347633303*^9}, 
   3.804921812419896*^9, {3.8049239694911785`*^9, 3.804923971477205*^9}, {
   3.8049245287412677`*^9, 3.8049245297058616`*^9}, {3.8049260896326838`*^9, 
   3.8049260902490563`*^9}, 3.804934908325693*^9, {3.8049352373789854`*^9, 
   3.8049352476672416`*^9}, {3.8049353071066027`*^9, 3.8049353204873676`*^9}, 
   3.8049360162403393`*^9, {3.806294383770208*^9, 3.806294388010005*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"7c7959d4-edb4-442f-9c05-d8e5e9aaf1ac"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\[CapitalGamma][1, 2, 1]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["r", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["r", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"]}]]}]},
    {"\<\"\[CapitalGamma][1, 3, 1]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"], " ", "r", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"]]}]},
    {"\<\"\[CapitalGamma][1, 4, 2]\"\>", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "4"], "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["r", "2"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["r", "4"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "-", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"]}]]},
    {"\<\"\[CapitalGamma][1, 4, 3]\"\>", 
     FractionBox[
      RowBox[{"8", " ", 
       SuperscriptBox["a", "3"], " ", "r", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "3"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"]]},
    {"\<\"\[CapitalGamma][2, 1, 1]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]]}]},
    {"\<\"\[CapitalGamma][2, 2, 2]\"\>", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "-", "r"}], ")"}], " ", "r"}], "-", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]]},
    {"\<\"\[CapitalGamma][2, 3, 2]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}]},
    {"\<\"\[CapitalGamma][2, 3, 3]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"r", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}]},
    {"\<\"\[CapitalGamma][2, 4, 1]\"\>", 
     FractionBox[
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["r", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]]},
    {"\<\"\[CapitalGamma][2, 4, 4]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["a", "2"]}], " ", 
           SuperscriptBox["r", "2"]}], "+", 
          SuperscriptBox["r", "5"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             SuperscriptBox["r", "2"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["r", "3"]}]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]]}]},
    {"\<\"\[CapitalGamma][3, 1, 1]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", "r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]]}]},
    {"\<\"\[CapitalGamma][3, 2, 2]\"\>", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]]},
    {"\<\"\[CapitalGamma][3, 3, 2]\"\>", 
     FractionBox["r", 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]},
    {"\<\"\[CapitalGamma][3, 3, 3]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}]},
    {"\<\"\[CapitalGamma][3, 4, 1]\"\>", 
     FractionBox[
      RowBox[{"a", " ", "r", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["r", "2"]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]]},
    {"\<\"\[CapitalGamma][3, 4, 4]\"\>", 
     FractionBox[
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["r", "2"], "+", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
            "2"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "-", 
            RowBox[{"2", " ", "r"}], "+", 
            SuperscriptBox["r", "2"], "+", 
            FractionBox[
             RowBox[{"2", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["a", "2"], "+", 
                SuperscriptBox["r", "2"]}], ")"}]}], 
             RowBox[{
              SuperscriptBox["r", "2"], "+", 
              RowBox[{
               SuperscriptBox["a", "2"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ")"}]}], 
         "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]]},
    {"\<\"\[CapitalGamma][4, 2, 1]\"\>", 
     FractionBox[
      RowBox[{
       RowBox[{"a", " ", 
        SuperscriptBox["r", "2"]}], "-", 
       RowBox[{
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]}]]},
    {"\<\"\[CapitalGamma][4, 3, 1]\"\>", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"8", " ", "a", " ", "r", " ", 
        RowBox[{"Cot", "[", "\[Theta]", "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"]]}]},
    {"\<\"\[CapitalGamma][4, 4, 2]\"\>", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "4"], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["a", "4"], " ", "r"}], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["r", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["r", "3"]}], "-", 
       RowBox[{"16", " ", 
        SuperscriptBox["r", "4"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["r", "5"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"], " ", "r", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "r"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"]}]]},
    {"\<\"\[CapitalGamma][4, 4, 3]\"\>", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          SuperscriptBox["a", "4"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["a", "2"], " ", "r"}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["r", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["r", "4"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], 
          " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["a", "4"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
       RowBox[{"Cot", "[", "\[Theta]", "]"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"]}]]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, 
    RightArrow[TableSpacing, {2, 2}]]]]], "Output",
 CellChangeTimes->{
  3.8049081521102624`*^9, 3.8049082469571342`*^9, 3.804908332516507*^9, 
   3.804908445033722*^9, 3.804909030040769*^9, 3.8049099542643003`*^9, 
   3.804910006805259*^9, 3.804910047378182*^9, 3.804910303940415*^9, 
   3.8049119594234414`*^9, 3.80491199509147*^9, 3.804912052242299*^9, {
   3.804912333536588*^9, 3.8049123611971283`*^9}, 3.804921830902307*^9, {
   3.8049224248909335`*^9, 3.8049224806999655`*^9}, {3.8049225162529526`*^9, 
   3.804922542163352*^9}, 3.8049240160454073`*^9, 3.8049240891527185`*^9, 
   3.8049260481270823`*^9, 3.8049273793214197`*^9, 3.804927552282321*^9, 
   3.8049320733278384`*^9, 3.804932289603654*^9, 3.8049343323370132`*^9, 
   3.804935292035503*^9, 3.8049353267618*^9, 3.8049361260960484`*^9, 
   3.8055193399078445`*^9, 3.805535054319846*^9, 3.805549697136098*^9, 
   3.805787032851128*^9, 3.805793362892077*^9, 3.8057934306097097`*^9, 
   3.8069906421862717`*^9},
 CellLabel->
  "Out[65]//TableForm=",ExpressionUUID->"a81e58b5-f481-4d0e-ab88-\
1f1dc833400b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"\<\"d/d\[Lambda]\"\>", " ", "\<\"t'\"\>"}], "\<\"=\"\>"},
    {
     FractionBox[
      RowBox[{
       RowBox[{"8", " ", 
        SuperscriptBox["a", "2"], " ", "r", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["t", "\[Prime]",
           MultilineFunction->None], "-", 
          RowBox[{"a", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None]}]}], ")"}]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["r", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
           SuperscriptBox["t", "\[Prime]",
            MultilineFunction->None]}], "+", 
          RowBox[{"a", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "4"], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox["r", "2"]}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["r", "4"]}], "+", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["a", "2"], "-", 
                SuperscriptBox["r", "2"]}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"]}]], 
     RowBox[{"\<\"d/d\[Lambda]\"\>", " ", "\<\"r'\"\>"}]},
    {"\<\"=\"\>", 
     FractionBox[
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "2"], "+", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["a", "2"]}], "+", "r"}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["r", "\[Prime]",
            MultilineFunction->None], ")"}], "2"]}], 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}]], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["t", "\[Prime]",
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"], 
        " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], " ", 
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None]}], "+", 
       RowBox[{"r", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"], 
        " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"2", " ", "a", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
        SuperscriptBox["t", "\[Prime]",
         MultilineFunction->None], " ", 
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["a", "2"]}], " ", 
           SuperscriptBox["r", "2"]}], "+", 
          SuperscriptBox["r", "5"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             SuperscriptBox["r", "2"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["r", "3"]}]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], ")"}], "2"]}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]]},
    {
     RowBox[{"\<\"d/d\[Lambda]\"\>", " ", "\<\"\[Theta]'\"\>"}], "\<\"=\"\>"},
    {
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             RowBox[{
              SuperscriptBox["a", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"], 
          " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            SuperscriptBox["r", "\[Prime]",
             MultilineFunction->None], ")"}], "2"]}], 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}]]}], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", "r", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["t", "\[Prime]",
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"2", " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"], 
        " ", 
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], " ", 
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None]}], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"], 
        " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"2", " ", "a", " ", "r", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["r", "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        SuperscriptBox["t", "\[Prime]",
         MultilineFunction->None], " ", 
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["r", "2"], "+", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
             "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "-", 
             RowBox[{"2", " ", "r"}], "+", 
             SuperscriptBox["r", "2"], "+", 
             FractionBox[
              RowBox[{"2", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["a", "2"], "+", 
                 SuperscriptBox["r", "2"]}], ")"}]}], 
              RowBox[{
               SuperscriptBox["r", "2"], "+", 
               RowBox[{
                SuperscriptBox["a", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ")"}]}], 
          "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["a", "2"], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             SuperscriptBox["r", "2"]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], ")"}], "2"]}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
     RowBox[{"\<\"d/d\[Lambda]\"\>", " ", "\<\"\[Phi]'\"\>"}]},
    {"\<\"=\"\>", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "a"}], " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "3"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], " ", 
        SuperscriptBox["t", "\[Prime]",
         MultilineFunction->None]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]}]], 
      "+", 
      FractionBox[
       RowBox[{"16", " ", "a", " ", "r", " ", 
        RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
        SuperscriptBox["t", "\[Prime]",
         MultilineFunction->None], " ", 
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "4"], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["a", "4"], " ", "r"}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["r", "3"]}], "-", 
          RowBox[{"16", " ", 
           SuperscriptBox["r", "4"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["r", "5"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["a", "2"], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", "r"}]}], ")"}]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["a", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], " ", 
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["r", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", 
           SuperscriptBox["a", "4"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["a", "2"], " ", "r"}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["r", "4"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}], 
           " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["a", "4"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], " ", 
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"]]}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, 
    RightArrow[TableSpacing, {2, 2}]]]]], "Output",
 CellChangeTimes->{
  3.8049081521102624`*^9, 3.8049082469571342`*^9, 3.804908332516507*^9, 
   3.804908445033722*^9, 3.804909030040769*^9, 3.8049099542643003`*^9, 
   3.804910006805259*^9, 3.804910047378182*^9, 3.804910303940415*^9, 
   3.8049119594234414`*^9, 3.80491199509147*^9, 3.804912052242299*^9, {
   3.804912333536588*^9, 3.8049123611971283`*^9}, 3.804921830902307*^9, {
   3.8049224248909335`*^9, 3.8049224806999655`*^9}, {3.8049225162529526`*^9, 
   3.804922542163352*^9}, 3.8049240160454073`*^9, 3.8049240891527185`*^9, 
   3.8049260481270823`*^9, 3.8049273793214197`*^9, 3.804927552282321*^9, 
   3.8049320733278384`*^9, 3.804932289603654*^9, 3.8049343323370132`*^9, 
   3.804935292035503*^9, 3.8049353267618*^9, 3.8049361260960484`*^9, 
   3.8055193399078445`*^9, 3.805535054319846*^9, 3.805549697136098*^9, 
   3.805787032851128*^9, 3.805793362892077*^9, 3.8057934306097097`*^9, 
   3.8069906446129913`*^9},
 CellLabel->
  "Out[68]//TableForm=",ExpressionUUID->"7bf8627b-76db-4b74-958f-\
4c618a6ec313"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Sol", "[", 
    RowBox[{"\[Lambda]max_", ",", " ", "vel_", ",", " ", "pos_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "v", ",", " ", "x", ",", " ", "i", ",", " ", "vt", ",", " ", "tmp", ",",
        " ", "soln"}], "}"}], ",", " ", 
     RowBox[{
      RowBox[{"x", "=", "pos"}], ";", 
      RowBox[{"v", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "vt", "}"}], ",", " ", "vel"}], "]"}]}], ";", 
      RowBox[{"tmp", "=", "gdd"}], ";", 
      RowBox[{"tmp", "=", 
       RowBox[{"tmp", "/.", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"coords", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], ";", 
      RowBox[{"tmp", "=", 
       RowBox[{"v", ".", 
        RowBox[{"(", 
         RowBox[{"tmp", ".", "v"}], ")"}]}]}], ";", 
      RowBox[{"vts", " ", "=", " ", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"tmp", "\[Equal]", "norm"}], ",", "vt"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"v", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", 
       RowBox[{"Last", "[", 
        RowBox[{"vt", "/.", "vts"}], "]"}]}], ";", 
      RowBox[{"deq", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"coords", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "''"}], "[", "\[Lambda]", "]"}], 
          "\[Equal]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"geodesic", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "/.", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"coords", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "'"}], "\[Rule]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"coords", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "'"}], "[", "\[Lambda]", 
                  "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"coords", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
                 RowBox[{
                  RowBox[{"coords", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", "\[Lambda]", "]"}]}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}]}],
            ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"deq", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"deq", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"coords", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "'"}], "[", "0", "]"}], 
            "\[Equal]", 
            RowBox[{"v", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"coords", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      RowBox[{"soln", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"deq", ",", "coords", ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", "0", ",", "\[Lambda]max"}], "}"}]}], 
        "]"}]}], ";", "soln"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sphToCart", "[", "soln_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xs", ",", "ys", ",", "zs"}], "}"}], ",", 
     RowBox[{
      RowBox[{"xs", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"r", "[", "\[Lambda]", "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "\[Lambda]", "]"}], "]"}]}], "/.", 
        "soln"}]}], ";", 
      RowBox[{"ys", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"r", "[", "\[Lambda]", "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "\[Lambda]", "]"}], "]"}]}], "/.", 
        "soln"}]}], ";", 
      RowBox[{"zs", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"r", "[", "\[Lambda]", "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], "/.", 
        "soln"}]}], ";", 
      RowBox[{"{", 
       RowBox[{"xs", ",", "ys", ",", "zs"}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"unorm", "[", 
    RowBox[{"solni_", ",", "\[Lambda]val_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x\[Alpha]", ",", "v\[Alpha]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x\[Alpha]", "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"coords", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "\[Lambda]", "]"}], "/.", 
           "solni"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "//", 
        "Flatten"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v\[Alpha]", "=", 
       RowBox[{"D", "[", 
        RowBox[{"x\[Alpha]", ",", "\[Lambda]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x\[Alpha]", "=", 
       RowBox[{"x\[Alpha]", "/.", 
        RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]val"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v\[Alpha]", "=", 
       RowBox[{"v\[Alpha]", "/.", 
        RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]val"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v\[Alpha]", ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"gdd", "/.", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"coords", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
              RowBox[{"x\[Alpha]", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ")"}], ".",
          "v\[Alpha]"}], ")"}]}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coordlist", "[", "\[Lambda]in_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"coords", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], "<>", "\"\< = \>\"", "<>", 
     RowBox[{"{", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"coords", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", "\[Lambda]in", "]"}], "/.", 
         "soln"}], "//", "First"}], "]"}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8048715107867084`*^9, 3.8048717908581295`*^9}, {
   3.8048718318214483`*^9, 3.804871918449957*^9}, {3.8048719561161923`*^9, 
   3.804872039226992*^9}, {3.804872087566243*^9, 3.8048721477668743`*^9}, 
   3.804874618458851*^9, {3.8048747042159605`*^9, 3.8048747070579944`*^9}, {
   3.8048748345871325`*^9, 3.8048748346645155`*^9}, {3.8048749085330505`*^9, 
   3.8048749087251844`*^9}, {3.8048759260221024`*^9, 3.804875927544099*^9}, {
   3.8048763971745305`*^9, 3.804876397181531*^9}, {3.80487681613282*^9, 
   3.80487683754464*^9}, {3.8049085736121798`*^9, 3.804908573976988*^9}, {
   3.804908958071591*^9, 3.80490895866719*^9}, {3.8049089963166194`*^9, 
   3.8049089979817667`*^9}, 3.8049101570703416`*^9, {3.804912089753332*^9, 
   3.804912119249366*^9}, {3.8049123714013863`*^9, 3.8049123715193415`*^9}, {
   3.8049346803493705`*^9, 3.804934958750492*^9}, {3.804934995151781*^9, 
   3.8049350012806478`*^9}, {3.8049351308141155`*^9, 
   3.8049351380957403`*^9}, {3.8049352501937733`*^9, 
   3.8049352525218744`*^9}, {3.8057933713385983`*^9, 
   3.8057934011214814`*^9}, {3.805793478490941*^9, 3.805793489729884*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"8ebbb874-15eb-4be3-93dc-ff00effb1623"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"norm", "=", "0"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Set", " ", "to"}], " ", "-", 
    RowBox[{"1", " ", "for", " ", "Timelike"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rplus", "=", 
    RowBox[{"1", " ", "+", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", " ", "-", " ", 
       RowBox[{"a", " ", "^", "2"}]}], "]"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Outer", " ", "EH"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Lambda]max", "=", "200"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"BH", "=", 
   RowBox[{"PolarPlot", "[", 
    RowBox[{"rplus", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", " ", "0", ",", " ", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Hue", "[", "0", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"Sol", "[", 
    RowBox[{"\[Lambda]max", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Minus]", ".2"}], ",", "0", ",", ".002"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "25.", ",", 
       RowBox[{"Pi", "/", "2"}], ",", 
       RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cartsol", "=", 
    RowBox[{"sphToCart", "[", "sol", "]"}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Calculates", " ", "norm", 
     RowBox[{"(", "U", ")"}], " ", "at", " ", "intervals", " ", "of", " ", 
     "\[Lambda]"}], ",", " ", 
    RowBox[{
     RowBox[{"should", " ", "be"}], " ", "==", " ", "norm"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", 
        "\"\<u.u values\>\""}], "}"}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<\[Lambda]=\>\"", ",", 
         RowBox[{"ToString", "[", "i", "]"}], ",", "\"\<\[RightArrow]\>\"", 
         ",", 
         RowBox[{"unorm", "[", 
          RowBox[{"sol", ",", "i"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "\[Lambda]max", ",", 
         RowBox[{"\[Lambda]max", "/", "5"}]}], "}"}]}], "]"}]}], "]"}], "//", 
   "TableForm"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Plots", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"coords", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", "\[Lambda]", "]"}], "/.", 
       "sol"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "0", ",", "\[Lambda]max"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Hue", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Lambda]\>\"", ",", "\"\<Coordinate\>\""}], "}"}]}]}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{"geod", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"cartsol", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"cartsol", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "//", " ", "Flatten"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", "0", ",", "\[Lambda]max"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"geod", ",", " ", "BH", ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BH3D", "=", 
   RowBox[{"SphericalPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rplus", ",", 
       RowBox[{"EdgeForm", "[", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CurlyPhi]", ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"geof3D", "=", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"Re", "[", "cartsol", "]"}], "//", "Flatten"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", "0", ",", "\[Lambda]max"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"geof3D", ",", "BH3D"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8048721706046615`*^9, 3.804872403901581*^9}, {
   3.8048724729909286`*^9, 3.8048724981707053`*^9}, {3.804872787269066*^9, 
   3.8048729245880423`*^9}, {3.804872958739601*^9, 3.804872996059049*^9}, {
   3.8048730373528557`*^9, 3.804873099055479*^9}, {3.8048731348762813`*^9, 
   3.8048731374670687`*^9}, {3.804873366906269*^9, 3.8048734029769917`*^9}, {
   3.804873580323511*^9, 3.804873611715561*^9}, {3.804873921893722*^9, 
   3.8048739324214587`*^9}, {3.8048739747221327`*^9, 3.804873975384564*^9}, {
   3.804874088504418*^9, 3.804874090586334*^9}, {3.8048741513474865`*^9, 
   3.8048741524324145`*^9}, {3.8048744846114693`*^9, 3.804874494724163*^9}, {
   3.804874631330611*^9, 3.80487463816031*^9}, {3.804874883568536*^9, 
   3.804874899015226*^9}, {3.8048749642580805`*^9, 3.8048749686383514`*^9}, {
   3.804876265596176*^9, 3.8048762669913216`*^9}, {3.8049082875707984`*^9, 
   3.8049082977881107`*^9}, {3.8049085481073666`*^9, 3.804908549260831*^9}, {
   3.804908667859469*^9, 3.8049086723488536`*^9}, {3.804908724888981*^9, 
   3.8049088524080377`*^9}, {3.8049089016535206`*^9, 3.804908919297764*^9}, {
   3.8049089771182814`*^9, 3.804908987853815*^9}, {3.804909101319115*^9, 
   3.8049091328213067`*^9}, {3.8049092530378647`*^9, 
   3.8049092914623823`*^9}, {3.804909535015937*^9, 3.8049095411967697`*^9}, 
   3.8049096342194448`*^9, {3.804909813644581*^9, 3.8049098167083244`*^9}, {
   3.8049100260346684`*^9, 3.804910026543127*^9}, {3.804910661428241*^9, 
   3.8049106615156674`*^9}, {3.8049120198788753`*^9, 
   3.8049120200155745`*^9}, {3.804912114355274*^9, 3.80491211477891*^9}, {
   3.8049123233816166`*^9, 3.8049123236517134`*^9}, {3.8049123954063263`*^9, 
   3.8049124135853844`*^9}, {3.804912539627676*^9, 3.8049126226081333`*^9}, {
   3.804923979383479*^9, 3.8049239854880157`*^9}, {3.8049245609867573`*^9, 
   3.804924561603957*^9}, {3.804932324405576*^9, 3.804932431481679*^9}, {
   3.8049349085936975`*^9, 3.8049349086326985`*^9}, {3.8049349645996513`*^9, 
   3.8049351490650845`*^9}, {3.8049353701887774`*^9, 
   3.8049354604656534`*^9}, {3.8049355006092825`*^9, 
   3.8049355009776297`*^9}, {3.804935837058834*^9, 3.8049358474953012`*^9}, {
   3.8055193559922476`*^9, 3.805519361755398*^9}, {3.8055194408960876`*^9, 
   3.8055194411970577`*^9}, {3.8055239255159907`*^9, 3.805523945257831*^9}, {
   3.8055350762931385`*^9, 3.8055350806673517`*^9}, {3.805549726017027*^9, 
   3.8055497262162237`*^9}, {3.805550124192978*^9, 3.8055501554583664`*^9}, {
   3.8057934499468613`*^9, 3.8057934537571397`*^9}, {3.806461895321776*^9, 
   3.806461899381878*^9}, 3.806990665664793*^9, {3.806990698853938*^9, 
   3.8069907160263014`*^9}, {3.806990807177342*^9, 3.8069908426673045`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"4fa55618-4fbb-4927-93d8-578a365c33ad"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"u.u values\"\>"},
    {"\<\"\[Lambda]=\"\>", "\<\"0\"\>", "\<\"\[RightArrow]\"\>", 
     RowBox[{"-", "2.168404344971009`*^-18"}]},
    {"\<\"\[Lambda]=\"\>", "\<\"40\"\>", "\<\"\[RightArrow]\"\>", 
     "3.5756501258130124`*^-9"},
    {"\<\"\[Lambda]=\"\>", "\<\"80\"\>", "\<\"\[RightArrow]\"\>", 
     "5.549070120069999`*^-9"},
    {"\<\"\[Lambda]=\"\>", "\<\"120\"\>", "\<\"\[RightArrow]\"\>", 
     RowBox[{"-", "1.0185867911627344`*^-7"}]},
    {"\<\"\[Lambda]=\"\>", "\<\"160\"\>", "\<\"\[RightArrow]\"\>", 
     RowBox[{"-", "1.3537841953709107`*^-7"}]},
    {"\<\"\[Lambda]=\"\>", "\<\"200\"\>", "\<\"\[RightArrow]\"\>", 
     RowBox[{"-", "1.3213976188947152`*^-7"}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.806990720512783*^9, {3.8069908077979736`*^9, 3.8069908432053595`*^9}},
 CellLabel->
  "Out[88]//TableForm=",ExpressionUUID->"dcc28a62-350f-4f1e-a68a-\
f56241393672"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {Hue[0, 1, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwVjms0lHkAhydbZNdsZTMaO7lWayRMWcTk/aVxmXmRa7mswhjzl8i126ol
ViyibKV134giSqmw1mUjKaWhNpeT6hyl1ArFUpO1H57zfHvOoxO4x02iwGAw
nOb537qZ8rMFmg+sGQr7Fi0sqLK+vpirFUaqKYbj61olVjrVsr+qRJ80Ub9O
rXgyrpZHtZtEShXJfWpOYrdcl1VJdaTLHD5Ih6je3/PDLrH+oG5bJta9kY5R
N/JWnxxWv0t1Hh+IHJHOUd8mWnn5awxSokYl5xfSJYipMGJGab2huphmygv9
tBEernxA20dO2WTaNpdt1Uf9e+We448WQWI8y+QxTRDrWH3I8LkKnLiScZa9
KQRqlZDbqaKm91DsbQsLpJ8vYqkPqcFK1aB64U98VOoHRpV2sCH9eCK/1As4
lj++uKdkJfa0v9xQ7WSDdUmv06uLtfGLj+Jq+W4BuI9X9Y/8pgvxrR+DecQO
oWU3vFJiV6FFie0a6u0A6WbJnWHhGvCWxZ96FSNCZNKo+4hQH/6TmwyddzuC
373Xt2KtAYoL2jjTGc5w7Pli8J6lIa4csxyQubmAtSRHbdLWCDH1m1zyHV3R
k5FV3cE2QVNn6USqrxs6jRSamVweQuw3NoZ4uaNtvY0tx2A98sp5taG7PCBr
0KlIsd2A45ONCRH7PHF7m3J+VoApXlyI3UuitqHwyav27IjvcdPuRM6RI9uR
29FwZk2BGRZs7X+eGe8FRllGsFWzORibry0oOuCNcuEAZ2TYAinq006yoz7Y
NabOijSxRISPuHU60RdpgUlK4ZFWeJZgGkSd/AHNAZlbxgf4WJ59pj+12A+m
j8OfRjpb49xSgwO3cnfgCU8z2vUKhZYoLdvvKnZCWZiZ51EIFGgXcTZ5+EPz
fjmt570ZjXGzDNLtDy/+2/qbTBvo0Eqf9LYHgG/dVRHcZYOr97lpfb0BmE72
XiY+uAXp7Z9NtP0CoRzban7ZSIDs6Fe7/AcDMZfps9e6W4A4Nc0lut5iTAnE
UxeILc5zF3XGPBXj4UPxy68W20Hx/QJ2y44gKIydf/H2tB3KTC4fLngZhJAJ
h4suxvbgBl5wlodJwM6pqVNutseAsK7Gc1SCycapEVWBA2RnD66jooORiljr
g90O+PeKK193Ihg5wnieu6sQczeiapPDpeC88Zb3dAlBm9jZxn2QYqmj4oSe
uwi3/IxDQqMJZrQrEtXuiaAqJg35sQQXiVKWebcIO0gxs3sfQaF2b6K3TISp
qG9qTOMIrlVO6uQ/EmFVyvSsPIlgZ139Rr0hEeJrmtKzThGM9bU9N3gngqWS
y6XaOoJT9u3R+qo0klVSFUYaCNw8lx61X07jwbJWD40/Cfbr7EwMZtEgHNOZ
w63zvZVW5iUaNE7zVtg43CF4LLfK0NSj8d73aU//4PzfyZZPX5vSQAB7DXOI
wPHoaKmhGY20YLf91DOCMO7fFiILGrqRNzklwwSjOTqcn/k0XJPLJWH/EKTO
/tU3I6CRl/bseuE7ApUEvoxlT2MkS+NL2QTBYRXZ1Q1CGvG56VVm0wRN5gkW
YU407ha1MUJmCIIEl/tSt9JQP/fZLfcjQZbxWsk5VxqBFealXXKCbPZsf6s7
japLEdNzc/P/bK7VkCeN/wDGtR+6
       "]]},
     Annotation[#, "Charting`Private`Tag$4859#1"]& ], 
    TagBox[
     {Hue[
       NCache[
        Rational[1, 4], 0.25], 1, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
VQMP1Rf0nZ8ZEZiVsGVDSSMPts9zh9mUN8rRYx618JCflqX5Zy2BoGs9jZlt
PBxpMJDKoJyrVLjsxgceikcPXrSjPJAa7XHhIw8j+UFV4pQ11PYXRvdS64vd
bz81JEBmaoqFfOVBo8BRJ5jyda2fNr7feJB05nJNKL/NrrnmOsJDT0KssQTl
BXrXeljjPPSvGq1oWkNgW567vt0kD9YGGd/vUI40Mg61+EOd/9mDlxGUP7BP
floqSuKKynJ7PuVjKd5nFMRJnCifjrCgrNC5V48mQWL2uj1sfcoFKhtbpCVJ
ZO7V6lKhbO+sESI1h8Td5ZEyCpSHbi9QFZ9HIvst/yuNclzvePX0fBJbxmoP
0ilrrezw/rmAxE3z4mQlylXu1bRRGRIr6vUCtSgL7j94MkiQmDOkNbWB8szA
Fd5nWRK3rNK09lC+oRsu0S1HgnsqTsyPMtNHeL9dgfLmnpOJlJsf7bJ7p0hC
Wzw1r4yy3yhzolGJROTW7NhBygvXqiTXLyOhHjktrUrdV/aROZtrlEkkr44w
ZlO2evz9c6UqCbkatUU3KPf+aj1Xqk5CpeHVhS7KURsqDR9rkIh6412iQz0v
5dB7bbkrSUgGfIoPpewkckwjS4eE/6UBIz0qDxObnF+m65LQf79J6iLlS1HW
fsl6JPawJyJ/UW6YrVR20ZDErB3j/q1Uvjy3zTpw1ohEdNPYFzsqf1JnBuac
YpIYel0q9ZqyuXTp3lATErodEmin8tthmzEVuJHE4xGGgxeV75D4szf9QGJ1
rIeCKFUPhTTuoNsWEkviveI3mBDYvdciQWBBYvhtjWUX5eHLuus520j8O3Iw
M86UgLbizAn7HSTYf3Idxqj6SlFOUzLdQ2LBNc4ZSXMqX2f0a1btI7EmUxIt
lMNGK/2XOZDo3ZQiuEfVM1nVUzfDInFodsigYCsBVS9GcKUzCWdrcYJuReBi
c4l6nguJDtpKzYXbCYib2b6+5UbCcaorc4E11S8W+Wqe9KTO61X7aSnVfzKL
Cpst/Um0ik/tCrUjIKeyLYJ5mERQstujdKqfxZxp1dEKpPZ3KTO4fjcBIed3
1NxjJCIm6VizjzqPuLlBfSQJd8n0a2ZUv8yxrT9nf5G6vyErZZYrgWWPucab
L1F5+KD2ssWN6jcqwz1rLpPI0W57t5/qvz5jhCn9OonbGR2EhxcBg+sO/f/e
pPL2TnqqwY+6355uS84jEszEarXr4VT97jw8apNH7f8tPcUzksCVx7NTNxaQ
2BDj72N+guoHsVrjy5+QYLR/VBQ5RfVX/UO3P1aQaP/aEPCUmielIZMiwtck
Ri8NZemnERh/0Dsc2Ujd36Ei35h0AnrdjZ3Jb0m800wK6r5N4LbV/YqmdyTK
Xg+Z5NwlcEaOHW7WRWKqKO/EuTwC+x6WzsiNkPjJ3KobXEP1s+67Q/pjJJqW
evENXhColbvcsWOcxPyXlpXf66n5EnqwPHKSRLn8PamoJur5bV8e9k2Mj+Ew
91NDH6j67g7/85zGh1rToPXQOIGV8t7fOul8JAZ2NMydpOp3u+OHKXk+zA7x
vXSmqXn0UL9MX4mPgSe93yPEaSgJ/RiarM6HtK2S2BHqfeCU/JbpgLV83Ir3
kYpg0KBiLflbbT8fwrvvUxRcaTBs3tyo6MhHkmMIN9edBgteeNYiFh+ZIc1b
7bxp8PD/tWeGy8ezRkF0SgAN+Un9f7W58pHANrt7JIpaP/CKd+EIH9q/LTcp
pVPrz179+08iH0ojAdkG3TSEyDdf+3GFjxfNw1kH+2g4d3ORz8A1PmJsylMe
9NOQV3BGqS2ZDwkXMR+M0fC7PeRwQQa1Xv54SLKELM7r8jW9Cvhg5UY0btaS
Rf4rrdjWt3x8VOD/vTZAFvFqzzImW/ioKz3NOBIsC89Ah4olrdR5fl/VKTku
C9XlMT847Xx4F1gOO5ymfu/gJ97HHj5CosNMm1Oo90fpVMP+cT5qOUt6Wupk
oWwt++G3ggAl9FfZgxp0xFX90VPmCLAzMTi0/Rsd8O3VX8oToPiJiI3oDzrG
ljQYKPIF2C3n4ac1RQfbN9lQ1kWA7znahdGSclilZMKU8hYgxlXjU4CyHBp8
g82GQwSIUI4dXLpbDjJLx2wqbghwR6aamfBUDgn+XzzI/wQwvFPhe/aqPELo
yxaqOjqjWHvjmr8DFuOulkRdQKczOEbiM+GPlmD2mOjiZ9wD2Cl6Sug2thR3
9B4dT+k7gJnQx5W9lsrQEtyznfZ2oebjrdXmaSp4b/Ukd2+/C1RTt8s0D6qi
8dbRVWb+rggx+yrIEajjZ56dieqIKwauZ41FVa/AzGO/guiDbrhvnGlkpKMJ
az2LrSE/3LC3+7B6YcFKVHNWu3v6C1GfOLmJTv3/IpyFT5MPC3HmyTmtFD1t
cIU3pV8HCvE5esRFc502xv1ouYYhQvxdteU/4y3aUD81MTl9QohP0R2PXbja
CM8tj4u/LETvqm6RFxe1YSy562HBEyFezufaNE5pI3r+abHPT4V4Ylns7CLG
wJtFlXsUy4TI+76k5qcUA0Ilw1/HK4VIGlQ5qizHwBV9BfNtL4SYjrkZ6q/H
wBirs6ntPyFCOpktmi4MgL9YQ7pDiINa6gXlngzEutoHmXUJ8Wr98If9fgyo
+v6jdLtHiJvz3IjTYQzYRWe5eH8Tomzq+Oi3awzciO0qSh0W4seXZeqn0xj4
HK84t3FECJezSilqdxgIT4rLMZoQ4t8YP2/HfAZepj0Xcf8lxByaV+VYMQPy
mX/sk6aEUCiRIOOfMaj5vC6jfloIkVMyFjo1DOQ89JmYmRGiPJMTUNPAwP8A
O+D+7g==
       "]]},
     Annotation[#, "Charting`Private`Tag$4859#2"]& ], 
    TagBox[
     {Hue[
       NCache[
        Rational[1, 2], 0.5], 1, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQrdT/d/E8uYt2ErouIb8Vf9qfmni78EX6f3sY32sv
u9+zdH4HGP8srxknS6wCnO/U73pgub8GnJ+q/4vXkNcAzvfVTP0o5m4C52+6
Ult60sICzrcW0lrPUm8D56f/njR3aYQDnJ9/7Lnxel8nOL8rik31b44LnJ98
vDrNMMMNzj/ILhmYHekB5xsKNkx7WeIF5yd8ttXxy/GB8xfOOyrzvdcPzt/c
Z3X7UlAAnF+yyzZgrk8gnL//1NJPndFBcH6mu+XezIhgOH/OCsOt2VkhcP7E
z3sbC8pD4fxnq0rLMorC4PwjbpNmNDWFw/mM/rce9TdEwPkMjtsYF1RGwvkd
4t99L7VHwfkFUcmHvjdHw/kPG01S7KfGwPkik2fe6lwYC+cvE9CqPD47DhFe
RfKu6qvj4fx5CgtkbEMS4Py9Nb8YMi4g+Ire7H+UwxPh/C3nNbtvXkHwe479
M1CITYLzJxe/zEq4g+DXiMrxK0Umw/krNVlPlTxA8Nm+MEoejEuB85cbbKyb
9xzB10xa5fc3NxXOv+25c1PoawT/0uIqXfviNDj/x+ZAG6VPCP7/HUVb2/LS
4XxvAzfXmq8I/vFY/czs4gw434o9YMPWnQj+ug0F3///R/ABjEJegg==
       "]]},
     Annotation[#, "Charting`Private`Tag$4859#3"]& ], 
    TagBox[
     {Hue[
       NCache[
        Rational[3, 4], 0.75], 1, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwV0Hs01HkYBvChKTWbDTU/uRSNVGort6Oi9vusckuu28WlkdzmO8liIrTU
VFsRhW5y3BNKuyakwtqwQtpONZwttKELapdWyjQYdvaP9zznc54/nnPeJQHh
nsGqLBbLRXn/Jy9VUZi7+Om3rcuid04skZM7s00MwqiEuFtocOJ5ctIQW3Z1
Bb1HvN7wXk4q3WwaKZhFHxOe9P7AlJGctKZIHT8Lesi21/1i9jI5eWB9vPof
wQfSMOb0nLtSTtrSuyMHBdMk+nCI0MNcTrbWqbn2C+bBzXmDbM1mOXmkbjWH
zTeEhVg1p1woJ7apdvUlbitQEFoSuTlNToLXjqubqZtCz//Cwra7cuJiEjzC
OFiCGK6KNRyUk4qOhOgH69cjfqx53jPtcWKjtVLCPrIRi1vqE3rdxolg4lxO
kRewaPj5+47kcRLePGAhcbHFcc1aYX3rODntM8tYsX8LtOJYVEVzggS2/Bhi
Ru1B+zckMr4TpEFNxyPU2xF/vl4a3l46Qcw0xZfeRW1FU7/6oaOcSeI/uukb
1/3bcMrT0qAmbJIU5N7Xl51xxepOTt/I20lSeda6W+rpDodK47GZoQoSVbPJ
PWebBySJhMuWKci9tqKPSb6e6BEnqYsKp4jQYUOd0Ot7JG/u4oT6TpPsa2ZV
ofu2I+pMp8ERQxbSR+uORsTsgHmOgbSskIX+0uiDVLQTOtEmZzTMVdBkf+7y
sWO7UC699bu0XwUqbl2vUsVeOGukV+T+iypY391WyY/zRul7B8FQ2gwkastc
pKd8IHnAnq6tYCPCJ7BRdtwXvexFL+2GZ6LvqGUQubgbfjEJngmxalhwPrMr
qYAPqxODTiNr5qBYY2VcS5Yfrnx6mvZ5mIMGkYHd8ht7oOpro2U8Mhe5hvn6
m7b7Y/RLi2lr59eoix9n0Sf+qDB/I3LcpYElzmqTRrv2Yj0/vO1Xe03cemyS
3NmxF8FfJKtma2khpXnK1JAfgFa2tmS0QwvnD7zb5/8iAArNOUNZovmI5y6e
x/MOBD/ljkWNbD6um8xsi+oNhGeD1UCdaAFmfVLRafALwsWDaaItHQtQYlp+
OHcgCB6ZnOyla7gwCSh1VYQFQ3jp4XvdOC66naordvwdDCf2qrGNVVxICw+t
JgdCEPOa15Q9xMWXSo+NvI8hsA7zyfbWYzB9V1R18gcBMmwYzkNbBs6m9nbx
nwVwll3rOUYZtPDXCkMPULCqdX3KTjHQCqS1OdEUb56Ji80SGfjRAvUnMcq+
Lrz8ltJjovkVlvEU0za5M2qSGCxNlI0rfqIIFJvnNiQzEFfcS0m7RGGRvae9
KZWBtZr7zapqir+8zMOzMxicnJukOlhLEdFi/Ur7MoOnmo3bdX+jUFyw0jmv
NNW3lB9upODr/dyemMkgw2yhreNDipI01SORWQw++fa2d72g2N2WLl2XxwB7
dZap91Bct6zPkCidHOIZS/oo1hUHGC3PZ8CLbNK/+pai0jHvLLeAgcfJa8Fh
w8r9RrPqD1cYZCf33cn7l+JEos3t4EIGg2m6HOlHigzzoUPdSouzUsqsZBRP
0nt8m68y+CP/PksoV/4jLzTWpoiBdvGUZ9YExRix4t9UOuDGuqJHCorTrUEc
42IGZTcjZNPTFF8J9cWZSv8Hl1sttg==
       "]]},
     Annotation[#, "Charting`Private`Tag$4859#4"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Lambda]\"", TraditionalForm], 
    FormBox["\"Coordinate\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 200}, {0., 54.67087497240908}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.806990720512783*^9, {3.8069908077979736`*^9, 3.8069908432583885`*^9}},
 CellLabel->"Out[89]=",ExpressionUUID->"8d199b97-1f8d-4885-a0ee-54bbaa6b1843"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$4904#1"]& ]}, {{{}, {}}, {}, {{}, {}, 
     TagBox[
      {Hue[0, 1, 1], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
1SoKY7otBlxJNmJRqKutI9Ht7tbIWpIvvxI81jkQjnLpT/VXk17jTDlX4TEY
jN9vGG9TJhlZvJ/lhgKwZLp1yJ7kIoJS2D7kgzNcZUnRJEe4b9CZr3mPXgd3
Piknuc4zJ3NvnSuWMkfP9ZHcl9B88ednO3xNX736P49TOrDlyQGle+if5d/7
n8ed3vBuQM5QAzwKbDL+8zg1S44gGe1H0BiZ8PY/j+MSNj04stsFEvpPG4yR
LHP82/uMXe9gu+DBE80kL/NpTckV8gaxZDeRHySfZe1t2SjkD1cuKi14kdy/
4nyOzZqPALddWgxJNg8LulG6Ogxkn574uY/k2kjVzjdvPsGl9S8jJ8n9iIgx
Nt3z5jPo5pu8iyV50adGp8ztCwjMMB/fINkht2yHnls04G7tO8tI9i320ph5
HQuuw6+vRpP7zyUeVMXxOhF2jdafaSDP7+ex/drP7b6BKxtfxG2S3Z8OXnx8
NAXmNoyp9ZPnf8lWM7BNKg3cvLjjm0lvWxkbouG6Kx0kot9oypNsdDfTet/2
DMjeL6UeR9bTPhOkPlifCe6az+Rvk/Un4XV7kFPoB6wxsjyeRNZn2h6ZSwF8
WSBQv8d1nqxfxZwhpziOHDhJCRU2I+vbdMvQ9pfjv2Aqo0iaIL1NvtJZengo
D9buEa4QJNl9i07N+V6Ed4cLszaS/SQ9lTg5P5oP9dvXfRQh+w8rlDXvdReC
waznne9kf/6Mshp4qlsESdXuKW9Jjzs3MFPr2lYEp49NaGqT/Rw2NnfKu7EY
+jJXfm4l+59O6ZZ6UFYKiYnSd16Q80FaMV1RS6EMOKJqbdb/JVB9caD2SEEZ
nKjW6Yoh50nHN4eoiZxysDN7gcnk/Mmrfie++lslJIbdqDRqJPA4t+qlyj1V
sJpHMf1XPVn/NytG7WOqYFP5uiWBOgK9fh3cVfOpGu5/Gg4Nqyaw5a4EbPat
gfoD+zVulRB4xJ+xEC5QC5lFefueF5HzvuDS8Q0etaTTfDTxLCDwlFXvY7tz
dcDDycUZ9YtAxw1rOnafqIer1zbXmX8n17e0+l7u3kbojvh74mMU6ZWrloXQ
zBvBY3p3IXckgRaxXFdk0xphYV3ndYtwAovFtJm+R5tg3cp7+Vs/kt6bOHZY
8HwzTPTIO4l+IP9+u4sh/bot4MaBj41syfk7/W9zQUQL/HkkYKlgQ+CmB9Hz
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
KDLT/g==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$4792#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-5.027596843372341, 11.312100696698527`}, {-8.084187421805453, 
   25.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.806990720512783*^9, {3.8069908077979736`*^9, 3.806990843305359*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"932482a0-fdd5-4359-9cc8-372820350927"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$4951#1"]& ]}, 
   GraphicsComplex3DBox[CompressedData["
1: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
cV06yuvC9T0D17GHvI5c3/Vy8levh/ytBruPYVd/fRGHQu/vfekvP2d+gniO
lvHM/i7Fvmgl94XQ718fuY/Y30bYd3fkvmN/fbFPC8h9yv7q5eSvXg/5Wxl2
l8Iu+bsSOC2Ak/w9iHh+JuOZ/U1Avqok8xX764O85y3zHvvrijx5WOZJ9tek
mcyrVWVeZX8HIQ8flnmY/dXLyV+9HvLXzbgusL/LgXMhcJK/5ZGvXGW+Yn+r
FyvQ2KAesb/1UdccZV1jf2ejDkbJOsj+vv4k66abrJvs7xtLWWevyzrL/url
5K9eD/k7B3ajYZf8bQicQ4GT+w3bM40N6hH7+wb9Rh/Zb7C/ZdC3KLJvYX+r
oc95Jfsc9nc++qLsD7P6Ivb3O/qoPbKPYn/1cvJXr4f3r84u+VsBONsBJ/mb
Plr2G/6y3/hz7ol+soDsJ9nfU+hLE2Vfyv52Qx97Qfax7K8N+t402feyvxPR
J7eUfTL7q5eTv3o95G932L0Iu+TvWeD8CZzkb1H0k9mOxBr6xfcLK43vI5T8
eP5f9vk5w/sRUb7o8eva88TjV1fkn6Dez9H66g9Lm2lzivuVGbuCrofzPJjZ
wZWh2nnaZMf5Xdeq/03nWTWw/gDW03mWDfS/MNYvPrarP0N7rme9+K3ZK/W+
iuyWm1LKXpvbuxO9cpg2R0p2x69MywjM+VvZ0HLlVO28i+yWx/q7WE92c7WX
+kca6xde5oV/1fM+oGxZeeq3dh9GdstMmVdIm2PLV9Us+/HyaWz3unu/5uL6
ZyWkpslX7VyO7JbF+vxYT3b3QP9dY/2i37ST1g3V+72wDkfuGNr9Mts5q55u
7ynPA8numFOORvmI7H7F+h1Yz3Ok0J/dxki/UGbHVtfuV28f77kz3IDn7Kfu
ndHmCcpWttxyzMDf5ZgHo/NRspsD68thPdkdDP1fjfWLV/X6VtWeC/zceGDh
OIO4mu+/7KM291DpYsz+1QbXtwnm1ixxzkp2F+jWk93c9aV+001G+kWxqvL5
y0BXT9dk/9mWHP92gx21+QzXrPPUP/FM83Ud8d9ktwDWu2E92W0L/SuM9YvX
8DdB+iv0dodIPUJvtw306u0OxXqymwf+lt9kpF9Yg/+bkn+2uxC8VZS8sV2a
V8R5NttdhPWmWK+/vp+N9YvRiLdQGc9sNzfipIyME7a7GnF1FefQZDePcRyy
3bXQn83GSL/oj/21Ve4vttt4ofMYg33Edrd+cD9oWP/IbhOsxz5iu3Oh/56x
fvEG+aqzzCdsNwfyQGGZB9juUeSN5zJvsF1aXwTryW4q9I811i+KI38+lPmT
7RZF3nsq8x7bHYk8uUfmSbZL659hPdm1gv5fxvpFFeTzpzKfs/4ayP+7ZP5n
/VWx/hnWk/4wq62NSy66rOxYW+DfmLNLlNSY1tcrJGYqrRUpTzeWixArI7mg
9S2xfsA6I7k4KCK3avloUpG0f2cceMFzLyaL5LnpWb/2+efOORBAdXxXRmTW
OWtC34AJO8YeDqA6vvesPJcteiFibejXIwFUx/VyquOHYHcy7PKcs04/1XfX
6LueoV/9rR4nm3S2SRnF94lHoKez1KPo8Zd3PJRPxW+lxz9tRwlNvxXhDznY
seiTYelK1WylFXOvu0qJt3nGv5/5Ublz9dt8+xUZSrXIYs2TfO6p/35XlcPn
ItivmkUaaH5Zkb+pg4bU8BiQqYza3el0oXZqH9N53fNnE54o5VoWTDsqMpU2
l0ZbN9x6XzmQuOZK+zOX/48e4ke/foNcL/T6x0r9Qu8X8abHv0PiF8RbF/BG
/Ot5KCZ5ENnAZwXwSf1Vv4TGE0VYqhJatHxArVJ3lIgajveVH99EMPTMlXoE
8fkb+B9K/IL4KQN/d0l/Bfl7C/gXSPyC8BOec4hPwrO9W6V2XVVeD3Q6WrJW
rtFWFOetIP/o27OUKg+gfdFr5UwvLa7Cc+zU4orzHK3vbKxH6YP1XnI939eP
RHw2+m1iqEchPF3WGNkVnY++bLZt8wfFep047B0cqDS4V/aEdv1inlw8oP3O
ZFbNY5UrDbzAv1/I7Ftv9BPLMGXwm3Hxo+wuK/2/PezRdlmmMqLBukbnF75T
TL6FZdwc9JL1ONgMH6f9jmK3Se+CrQIfs55TX9dMcO3zUBm5Nf8tN/Uv6Tnh
6mUe4BCitGoz84hb/kjW8zSh516nc7eVJbNbpWjzZaSndo8aQ11VHK3cal3S
cJGeB5+6PS4f5R1Q93q5mV3VfUV6tt8/lzUPPGSanJ8iPUnOkUunNN0l1v8a
6Wbf4wnrSa7UqbtwCBHLTo9zM8TTBnOz+c3q+RviabbriPfM4JvC7p+YQJ9a
IazHtMnjtSo/YsKJH7kM+aHfKzUbu3tkSwN+LOu8+Kr+e9F7fmrKjOCbrGdg
R5sB6vUSTQcUs55rcL0eYk44/KX9q/IG18t27/iJqj+i9pIG+SY13fV/9JhL
PUKvJ1Tq4fnGOKdZ21V+ReDsjyvd7C4L0lMJfo2TfrEe+t1TE+kX65l3MbKv
er1FQtil9+r1Zz0p4Hmp5Jn1WIPnfJJn1hN77NBVdxXHAscnCzRcpGfQ030h
Bted9dxov7SewXVnPVWOeC2eoPLy2M7DU+OJ9OxEHLaRcch6ghCHK2Qcsp7i
I7r8q12nul3vlVmqXjfSMwT7opjcF6ynB/bFcbkvWM/wqCQ/LW6+XB1aYJYa
R6SnD/Jb3WJZ+U28l/lN0eclqgv6PEZ5Xp/3KG/r8yTl276wG4K8SnYdkDe6
I2/Uk36JfE9l3tiKvEFziSX6ybzhibzhIP0SrvD3hfSX43MCeCuOfEL6J4G3
S8gnpN8TeuKhh/SHIM/MR54heTVcr5ryerHdAFz3jsg/ZPcnrvsB5B+yawE9
LaGH9HdEXuqBvETy/oi3YBlvbDcc+ao18hXZDUS+mod8xb93gJ5o6CH9/4yQ
eewQ8hjJ32K/LJL7he3mqiz33UbkN7LriH1XD/mN50uhZwv0kP7uyHsjkfdI
Phf7PVHud7ZbB3nDG/mQ7F5D3uiKfEh2t0NPsSdSD+nvgTzphjxJcspXt2W+
YrtuyHvtkD/JbgLyXiryJ9nN5Sz1REEP6R+GvGqJvEryrpBXlHKht2uJfKu3
m4h8S3ZJfyPoIf2E5y3yMMnbgIcekge2Wxc8z0F+JrtB4NkW+Zns9oQeF+gh
/TvBf1HJP8tb4Lr3kded7eYxjiu2O4x+z4t8TnZ7GMcP6899XMbbJuR5kpcc
YVSv2a478j/2EduNQf7HPmK7Zsb7hfU3M95fLC+CfW0p9zXbPYa8YYt6QXbf
I28cRb0gu/Whpzf0kP46yCdtUEdIvgd5bLLMY2zXDvm5HuoC9b3uyJ/VUXcI
zyjkz5uoO4TnOvSvgX6yOxl5Ncc1WY84vyH/D5X5n+taFPrG/TL/c11LQ9/o
IfM/4+8HPWOgh3D+gzpyG3oIZ1HUkfXQQ3hOd3IcquW7Q238Ck436HNGBcp8
OnjfBDW/rrEinG297+c02xyhuAwuMcbpyjHF/bvfmiciQ9kxLsZGy4O+KYdf
qfHL/dXmPvvGfDN5owyrGRVk/TKE1ycWWbjkhpq/tjYZf1Pjm9Z/2ZdroqKu
qx+ztu139d/R+t0XLuWdo+adw6tSRml+0/rnuz0z+qk4RJOm5TVctF78cps6
T+UlMmVlJ8P1pcyLzjJzuyWSu6wvUPPCO14/sdfIedr1PteoibMhHtPIcTaj
Cr0QkR/LxrgXesHr3X//8NHi1b5DxJUAA3/3ldtaVdUrAha1nlfL7Ravv4Z9
1aLU2HCT3n6WtL51z8vFVdyif6sc1QZeOSZo/Sjot5P6OU52F9icovIpTENT
IlSeeP0k4D8r8fP6junf+6i8i0kNd5zS/h2tfwR+3kt+eP28+0s7DVFxXHTv
UEDDRet9wP8RyT+vL/jOeWFN1c/Rn/a01Pym9R9wfXfL68vrm329vljjMder
oF0ar7R+M+Jnv4wfXj9w+oqfNdTr1DQ0xqO2et1o/bmA0OF7Zj9V1nabNMX1
0A3FbJfLJT+nTGWB763cv4tEK96l69Z4ZP1ECby49fDoVenKLf8u0y1uxSvm
nR5abL203ar/+laZIzenKH2sO/nOzxmnbJ/3tE3YyzcKyZdYyfnyh07O4dm7
7bFSaP4wv1k7F/X/j7z8NOl9vgNWY0qYltD0dq9x4aVmZ9rQ7/VHhh6yovvl
zZNiQjRcz5zOxtbyOWLVxr5ftvPJz5XnX63Pf+qYpux4OjxnHcvPSispFxuu
elSP3ZmiVG1X0G/nvli+f1/eJMM3PPmXMuHJkKbnSsUo7tKuWA6cIcBJ5yMP
4G9T+NtX+iUc4O8h+Evyurl2dY9U8TZOuNq7RUE/KyF5E2vA5yrwSfL5j3+9
uKD60bmoy/2wOYusakr+hV+NLnM2VHuk1KhqXT3vwlC+Lt/+LdhrtM8b5dej
SIvMGpF8XdJWr9ltWzdamb6r5bAN9z8z/5Vi+lScsTpRKZl/dYFTS5KZn5wv
UiLDxiUolT8d6WRR8Rfz8za5S8Wn6+OUQZOT6g95kMT85PSV+udBP/mbbZLE
kyNY4iG/3P3mlirU+qxSxavuwn/7P2f83Zt/KXT+/g2lRPatrsffxTD+21td
+ybseaSsqndqf6V+8Yzfcfnj8Enfw5Uy/3jY1NyYwfgvlZrvvqDXS+Vi8JmR
B0PSGH+S9fL5Z44+U7rbOp7aFveb8YdA/3roJ/wDgaca8BD+gi+uJhZpfVZE
e/d1NMT/2qfEm4v3b4ie4WutDPHHbJ/i9nPPI1Fma6yPIf4jQ52nTPseLupU
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
tsGz1LzEOMs8nFdMzUei5Z6ej9X8xDidcF26yOvCOCc3q5w7NDZJFFx/qb2a
lxinlf2Nq2peEjX6Ff1X+0s4u1Qfk6LmJTF4ZumVVy/G/6nXiKvHMq4YZ2CO
b33j9l4SzVa6zlDzEuNs/t5x53aVx88ng8M0XglnBuLcVcY546wyu1vjhcMi
hLd9XGc1L/3pq118vZxUHsNKxj7QeCWcT/qnnms5+IN4Yd5+tpqXGOcN7NNC
cp8yzouzvszqdOm48u6hRw81LzHOwAld1+dW43Luo0VvtDglnNNiZd6IkHnj
T/9W4sj6IXmeKN87HN+h5iXGeSthy7tqalyO9DrQXItTwvnpS4lFB9+cU7bX
SC2l5iXGOShN5r1BMu8xzgtd81b2jb6vxJRuuUjNS4xzePV+tto+t5i29qO2
7wnnOeThLjIPM86Ok69EO9VOUDzOXZx1asNvxvnhyrM62j7f0/fBW23fE07n
bFOybboSq6RE7uo5u8svxjkKdaSzrCOM836pkB+Fw58ovheX+682u804q4a5
9dPy5rvMG6ar1TxKOE1R1zbKusY4P3ouzanmJWXB1T7Dfjt+Y5xXwmqaa3lz
zK9uw2zVPEo4+4Rvy6HmJSVwwPjxle99Y5yPUZe9ZV1mnFWe/bBQ85LytIZ9
saqu6xnn1ZIrhVaHvuWzr19YrUuEsxv6hAmyT2Cc7q36/kjsl6kc+37nZHmz
y4zTud/bumr+UU7cWrTycejjP3GIfqZUXFY/w3iC8DvKSLy3hPo3+h3oN52c
3g8zHO8zIXlbyEfq5IRnlsSj0HPIFPRFd9AXkXwQ+Nwj+WT5RvQnb9GfkFzf
d9HzzJu4Xn3k9WK5vv8heXH0dTbo6+j5ZxziYaSMB5br+yuSx2O9C9bTddHj
ofgZCX6WgB/ej+DhMHggeUfEj7+MH4WeZzrg987N8H4V4r+P7v0wJJ+O/ZUg
9xfzuRX91Xb0V3y9sE+3yn3KvOn7NJL3xn6fIPc780P9ngX6PZLT+olYz/dx
OrvE22Tg/wH8xE/Jbe9far9zd8d7V8jffLv9wv9LvvSrzIdbZT5kf3+if8uD
/o3kxRKN8ir7q+8DSe6I/PxV5mf2l/rJRPSTJKf137CeeNDbJR4cvhrlc+ah
gvF7GNjfv8nvGtcv9tcf/eFV9Ickb4Y6+FTWQfZX32eSvATq6XxZT9nfiuhX
e6BfJXlJrF+A9cSD3i4/lwD+l8BPPND7ZKrhPS3k79/kHdBvDJP9BvtL/Wcy
+k+St0HfUlP2Leyvvo8l+UT0P4Vk/8P+KuiH56EfJvm/WF8Y64kHvV3ioRPw
DwF+4iE/3mfyBe9vIX//Jk9Af9hB9ofsbwv0t23Q35LcF31mCdlnsr/6Ppnk
j9Cvpsl+lf3ti357F/ptkgdjfTrW8/2Xzq6+v7UAfj0P0Xivi54HvZz8bS79
FeQv8WOF/pnkc+DvNOkvz6Pq+3CSk79zpb9C728y+nmS99OtJx70dvX3Ix2A
n3hojvivjPe9kL9/k5dA/CfJ+Gd/bYzjjeUU/3Vl/LO/+j6f5HQ/OEvGP/s7
CfFfAPcLJG+L9bOxXn//SHb1949pwE880HursuM9MOTv3+SbkA+vyXzI/oYh
/zxD/0/ybciH5WQ+ZH/19xEkr4R82F3mQ/a3MvLhPNyPsNw4fzIPerv8nAf4
A4Gfz1/wfhjUR/b3b3LzqUb1kf39+MWonrL8qnF9ZH/19ykkL5RD1scEWR/Z
32bG9ZHlhXMY1VPmQW+XeGg41ej5DPPQ0fg9dezv3+Sr0S/tlv0S+zsc/Uky
7l84TtAv3ZT9Evurvw8ieU70S1ayX2J/bdAvTcf9FMlzYb2C9cSD3i7xsAb4
9wI/8dAa/fxkvE+G/P2bfA368xjZn7O/vdHHXsX9Eclfog9vJftw9ld/n0Xy
OPTbFWS/zf7GoN+ej/s17tuxviLWEw96u8TDWuD/CPzEwzXcB+XFe2bI37/J
f+G+JlPe17C/Tujz1+G+jOQ+uH/pKe9f2N8CuB8ZKe9H2K+CkLtATn7p9ZBf
dJ8VDTz6+4hfuA+l+wial/DCuQDJ6bygBuYo6L71PH73Go73xnBfjXOKcZgD
IX/1cyPk7zOcg2zHnAn5WxO/I26J97SQ/tc4xxmIOQrSr5+7IP2mOCcqgTkN
0t8Zv8seiPeicP+Dc66umHMg/fq5CNI/COdopTFHQfqnG/8en/WPwzlgMcwh
kH793ALpP2x8zsj6F+veT0L6Txmfk7J+/VwB6ac5BF/MIZD++rr3gZD+8jhH
3oRzfNKvP/cn/YdwTv0DcwKkPx/ea9ET77Ug/Utwzu6Mc3bSrz+XJ/0lcY7f
Bef4pJ/eZ9IW75Hg+yDg98M5OOnXn5sz/8Afj3N20k/vh2mJ9zbo+T+Jc2rS
rz/XJv10Dr4K5+Ckf4nufQ5clxE/RXGOTPr1586k/zrixwzn1KS/nvH7i1j/
Y8R/N5zzkn79uTDpb4r4L4tzZNJfGvvXCu8BIP1h2L/DcQ7Lzxl057Z8/4j9
WxHnvKT/JPJPAn53T/oXIP/44JyU9OvPVfl+BPnnKs5hSb9Z3Q0/a6j7bXHH
eu08VP9IXhvyJZBTHn6Bc+HTmPej/Hnz0/IG2r6aFDG18UzVD9JD8smQ8/Mi
nI+3w3wa6Xk1bteCWur+sSxdqI8aj6yH5G0g57qAOQEbzImRnlZ2c2Nr+fgH
NJ8qz2lJT2vIW0BOeswxL5FvvpzXIj0rzkxrUFvla0mfBZ8/GeBZCbkP5KQn
FHMjqzE3RXoy7aMCtbjfb3HaY4YBPyYOxnLSUxPzM/kOyvkl0uNZ0ryuFn8d
p23aP8XgenlB3gly0tMZc0QjMEek19NGrhd6PVaQk55awJNH4uF6mg3490r8
rEcv5z4N/KzCXA3p8QWfiyWfrGeNMf+spy2uV155vVhPzrHzPxtc9z99I+S4
7qxnNOKnE+ZMOJ4Rb+1kvLGeW5C3h5z0nEY8d8G8B+m5jPifI+Of9VzRyUlP
CPbXQ8xdkJ4a2I/n5H5kPTV1ctJzf7lbea2+fux7cLaPmi8pD9Dc7HDMIejn
ZmluQT83extzDmRXr5/6sUeQX5Fyro9ueJ5vIZ/nc9yOCOrpoj0HXJW8tMAI
9b6H5DRf8RzzuuQXnQu0gR6Sj4Se1dCjn8egeeC/4dTPaURhrpj6ScJ/FOcR
hNMJds9Luyy/hvOOvfK8g89h2+V276Tll/zThzkVU+OO+sygV8OcsuYMnncO
iN97ieVmON+5K893/szrfneZrOWXkqe6tdqkxh2tv1m+rrU2VxET2PnxjV3B
LJ+A86wW8jzrzzz2UwuPkWp+eZi9ySst7vicrl7OzJsVgpQz6U1MKhT7M/+Q
ZHx+x3rsX1ioffO0gH9DZR9N632uzmpaQe2/B/eyaKv14yRvYnxeyXpeeuW/
r+WX9LpbfQzxONZOT15ldluU+NS1WpHwJywvjfPZVvJ89s/ciOvOWC2/zLa3
Lb7RgJ+vuR/30s75PuR1uqCd+5F8Jc6j18nzaNbT0MR6opYXnrassqCwwfWa
6nTRSjvXbLvlQHznS8dZboPz96Py/F3o9TySevhczN563HrtHHd//TWfv+29
xPLDmDdwkPMGrOcZ/Joh/eL1L6dPuaKdW4/0KWmjnWOT/B7mK9LkfAXreW3M
M68/4j5x4O0KQaLEAeW8dm7P8YN5kmNynoT1OB9/8sDguvP6NgmPphdxXa+c
sLrZVZtTIHl+zM98lfMzrOcs4jBExiGvz5vj1bGVZreV1GXKLG0ug+MB80L5
5LwQ60nCvqgj9wWv3xaR/cO+wWGK3dziX7Q5FJI7Y/9ewP6lvBGM/XsU+5fm
rIpgnuoL5qlI7oJ9XQ/7mvJ2Guay9mAui+Qx2O822O8kD8U5r4c85+W42gf8
isTP8mbIDy+RHwjPOPBTAPNUJC8bJ/npgLxBdpNg1w92SR4Eu+Ngl+TPMcf1
E3NcJP+A/JOO/EPy+zhnj5Dn7Iy/Aq7vD3l9We6NfNUe+YrwV0f8JGP+iuQx
iJ/vyGNkNxV202GX5BawW3q5tEtyW8x92WDui+RRyIdPkQ9J/gJzDm/lnAPj
v2Ic/ywvNFHmz5XIn4S/P/ZXAOa1SO6BvOqHvEp2M2A3xyNpl+SHYfcp7JI8
GnNioZgTI7kH8vM85GeSH8OcSQs5Z8L4DyI/lJT5geWtkc9TkM8J/wvkn3zD
5XwXyVOQfyrVk3me4wR2B8Euy2G3GeySfCnmypIxV8b9LepFc9QLkpfHnM8T
OefD+F8gf7rK/MnyqqgvHVBfCP955OdRmAcjeQLy8xHUHbLbGHYTYZfkv2B3
JuySvB3m0HL6yTk0kufNI+tXyXyyfrEcc1YX5JyVoq8vx2V9Ybk/6t021DvC
b4f6dQfzYyTvi/r1C3WQ7NaG3QjYZf5h9wHsktwRc2s1MLdG8o2opy6opySn
Obfycr3Q19/Wcj3L+wL/ZdRfwr8V/m7BvJnerzjUZbI7GHbzwS7JN8HuUNjV
8/AGc24k9wIPN1HfSV4J1zdWzhky/m/oTyJkf8LyC4g3V/QDhJ/isz3m00ie
hDg8iD6B7LaH3WwyrlieD3FVTMYVy5sgbuMxF0fyZMStF/oNfo6K/fhS7kfG
PxT7sbjcjywPR37IK/MD47dGPvmNeTaSpyNvmMq8wXbXwO4P2CX5dOM8wPIQ
4zzD8ifIM03R/3BdRv48JvMn439m3N+yfJZxPmf8weifV2H+jX8vgD4KeZ7t
5rpglLdZvtY4b7P8M+pCTlkXWJ4ab1QXWF4Y9a6arHeM/zTq3XlZ71heEvU3
Ff0b4Z+Iet0Z83Ikf4q6nIS+juxWht3OsEvycNh9Drsk/446nr2MnNMjeVXU
cVNZx1l+Ef3JO9mfMP4A9Cdxsj9huQv6pRLoJwm/OfqrOMzXkbwo+qj+6DPJ
7kPYzYRdkr+B3ZxB0i77hb7rIOb6GD/6riXoV/k50mzZfybI/pP7Xmv0nw1l
/8l+PUf/6Sv7zz/zeOg/u8r+k+UF0d+mQT/5+xD9cCrm90g+AnZ7wy7XNdi9
CLvcH8LuZNglOc0NrsXcF+FZvsCiktav2IVVe9bV4D6LfsdRHb+TJR7Wzaj5
bEToZitHS5tqLQsu4vebvS/iOUt7Xr+oRUNr7fez9F7JfsGL+j8Zl6D4OWcu
GKv9DhXf3bMe3+iidn7Q5daE49rvUum7e+0g7wo5ff9uAPT4Qw99/+4b7K6C
Xfr+Xdn4PBbZu62zul1udd0c6l/C2fCfz+7aOcS3lGOdtPMmwrmjyI2T2nPm
GjsmxWvzPIQz9zvry9p5pcOCwvO18xHCeT+pxclfTklK/cIeG7Tnx/y9eJ2c
3leWB3r6Qw9/DxR268Iu+dUaOH8BJ/kVOuj80WYq71cf2Q0YGfrnPfPTBx1J
u6/633HI7J8aH+RX6Yg2NqNUvnpFBx3V+CO/Pp/qvTdd5ffDL7ua2jkX+fXk
7qEbv4pEK0/rbzyqPecmv0j+DHLy6wv0REMP+VURdvvCLvk1Dzj7ACf55fDG
5j/fuxVyt3jWe6pvOMrvHJJf7SyGZ30f2U1+f5j9+rmsbNZ7vOcnyO8okl8l
rKIstPcFd9kjv7tIfs04E+3+3+9lfbXvv97LOhPr9e9lLQn9ttBP/CQDz0Lg
IX5sgH8M8BM/b+FvCPwlfqaDH/17fhzm9vjP7xG8wu/+6o5bu3txr5d/3s+2
Mefsh9ZPxI2nXnsN46QUfuc4wLvjFMM48Rnjkl373Zp7ouWb1gZx8gq/66wV
v2CQYZw4jC9rp/1Or/H7jEra8z/i8xF+x0p5hPjsj/VNsJ74fA39ZtBPfC4F
ntHAQ3xWAP7BwE985t0k/X0Mf4nPZPDTDfwQn4+yfve1KOBH3kY5DPaX8MQ5
muewIyPUv8xnOcz5NBr47NQeg3xC56pD2mVWMMwnNB9VoUx4xguDfELnpIX6
Jmf8Msgn+TBXVrXRzfXa+S/xSeeedF5FfNIcWjWsJz7pHLMw9PN3ioGnIvAQ
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
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnAf8V/P3x+++NyNZP6NQKEJkZ0RDVIq0tDQJpZIKKSIV7ZKyigqZGdm7
YW/Zm+wysjf/19Pr/Xj8H4/v+3HP59xz3/d9732/z/uc1znnW6//sI5DkyiK
+hZRlOr4ehZFZ+VRdKKYP5dRdIfoY8XvIPoNyfSPo2iEzp2h1kv8FuIvF7+T
+G1EPy+6p+i1oltUUfS0Om0r+gXxe4l/ruj7RF+ta88Tfb/oa0QfLfpF0SdI
pp3ol0X3Fv2x7v+A6IWSOV/0ANE7iB4nuqb6ryN6oOhHuLfGdKGOn0hmiK59
VPQEtX3Ev0DHt8QfIP4/esZI18wWf5r4U9XqinWUjs9Ipptk6upYW/2P1Pif
ldx4nWuk47m539W2kl+hc7/p9wrRJ+h8L/G3Fn2z+PvqdxP1s0bnHxR/kfgT
df0EtXtFj2dMajeIfkNyHdSWiP5Ixx5q94hur2uP49kkt4XGvIP63FHnUo3r
O/FvkkwX9d1Yvx/UPbuK10NtpeTbSf5htc6S76pzj6jdL/mOkt9L8nfp93uS
fUi/LxP/XdEt1S4VfaTO3a52pegPxEsq0x+K3kd9XiX6LdHLdO1s0UeIbq12
v+47WmO8U/xZvE/JNtfvjhrDMvXXVHRL0W11vpH6vFW8t3XdXfp9ieTn6/xV
apeLXqxzDXnnkp+o4+eSOV10L9E9RG8lmTqir2Y+iL+d6GtE1xW9veiFouuJ
3kL0bNH/E10VnhurdO3m4s8SvaX4G+i4hcbzpPjrxD9C9HO6/5aiL+FekrlB
zzZEvzfQcRPx3ld7TvKniTdf9Hax3xnvi3fVT8++Su1U8bfU+cck94r4/yv8
LKsZg45r1F4SPVrXdRVdS/RQ0aervZL4my8q/N23Ziwa2+m6T3/1/bTaIPE3
E39D8V/UtZMlf7HapqLHqI9vRG8u+iIde0tuG8Yg+lLmqq7dWMd31Z5hboj/
juiTxO8nuqfoBsxV9fMtc090fx1PEH8X0Z1KXztQ8t1LP8tpoidJvp/ohpLZ
iXejsZ2lMV8o/nrJ7ST+bnwr8ceIP1H8Pvq9q/gbFR7D06I7S/Y90Serz5ai
Vxaez2Ml/51+byGZmoVlnhV9u3jD1DbRe2um4yPiHyf5LqW/1ymih4q+gfGL
3kX93KbfNyaep48WnqttNK7jRb+tsW0r/pWi64j/pn4/o3f+Jc8l/hLej/jH
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
            "]], Polygon3DBox[CompressedData["
1:eJw1nAf8l9P7xp95zid7ZiRSESlE9qwoNCQaKFIRUhmRLTRRIikjkRYpyZ6Z
5YeQlS17h2zC/3p3Pf/Xq/P6nvu5zzM+z3POPa7rPm3dZ3CXQVmSJD2LJNG/
5OSYJIfXkmSahFyKSWWSdJU8XXKQPDckyekas6H6p2j8PMlnSN5M8nmS19TY
tmon5EnysuTn9PdJnbub9C9Jfk/yLZJXpUlSV/LNOv80nV9H+vaSn9L9NpJ+
rtrGOjZD8tG63izJa0o+TeP7aXyi/o768430/aQ/SPrbJN8ruafkOyWvpzHr
aHxv9Z9W20PyGtIdrNZbz7FE48dKf6quV0i3r+StNG6+2uaST5fcR7r2Gj9V
x/7VM3fT+GN07Df115P+Jl1nnnSbaPyZkvtKf7z0f0u/leQvJI+QvLv0r0l+
SeP/1vi9JL8neYh003TsHh3bQsdGqj9D/Zr6B0t/hX7PKN3/XR3bmvvp74tq
HaT/RnIvnX+Y9Dfr2J+65ye639E6tlL9V6R/oRr/u2ReWyL9yRq/UMd21TXW
V/9Gtca6b0+pv9Lf26RLpdtG8te6f1/p2+jYrZKvk36O+htI31fyLF1vkC68
juRjJH+s8b01fk+NuYbvLf2R0n+n+/9P8sbMJbWeus5zkkuNj2rX6/z/JLfS
+O2l31vHFujYn7rOX2pj1O+nazydWx6d+fxdNK6l2t2SW0j/G79VbSTPI3lf
6fZTu1fyUI3/Wbpf1C6X3Fn6+3LLl0meJf3BGttW7SG+heSDKvlhvofG36X+
ZD1fQ/2drmPd9beH2tPqT9f4juofrvaE5MM1fh3111O7SXIdyY+of4PO30F/
79CxHXT/7dSfrf7JOn/70ro7JTfR+EbSbyX5dslHSz9Y7/Jutbskbyf9kdJ3
lf4pyfdK3616nmcYL/2jud/HCMkPSH+2zr2fJnkf6fep3s99lTxW/U56vi91
3q4af5XkjpI/l7yL5GskXyd5bf3dW/JJ+l4X1Txn/pI8R8cn1fzMPSRP56/k
f3T+EZJvl/wXa0Cts+QpfHvp6+rvoZIH6viZ6r+u51kueaL6R0r/o463krxu
9T5vlL6Z5OvVP0r6ldK3lnyGnucftTH6LS0lX6nf+rTaexrfQPJ96t+s8QeU
fge3Sb6mxkRMkmslh2o+TlS/vg4fx/qM1v3C/NZ9/mVuY1skn6V7/ad2he63
m+St1d+C36sx4zXmmcLrfSz2UmOu07W/1zVWqB3I+9X4YzV+Mx2/VWM6VfPn
cfUnSl8v97u5RfJhktdmbalto+O9JH+pa3+lNrSaDzfqWa+SfoWOXahjG7F2
1Xpp/CLspY5/q3a+dLto/DUa30X693VsgI6dw/rQ2IJnVbtZ924k/eY6dojO
H4qdUX9N6W5Su1rnP6P2gc7dSfpzC3/btThX7fvCz3IR9lXy5dJ9JHmg5P01
flfJLXSPudX6fJ61UvOanqdjN+naL6t9q/5k6W9Qf4na15LH8D10rU/UzuC3
8nt0vc8ln5XZnl2vsS+pfSn5fOxp7vGnS+4o+bPC44dI3lLnf1j4+XCKa0ge
rnOfUHtN8iDJQwrPxUz9a9XOKvwtU+6tdpXGjtTzv6Pj/XXOm/r7ltqJ6n/C
99L33lT6V3XOZ5J/kLyl5Nd4bsk/St5K8luSv5Q8RtcblPsa/XSNUXovDaRf
Q8eaVv7hYvXXUdtZ8h86f2vpP2XdSz5f+k0k/6ZzN2D9F14ruZ51gtql0teX
PuT2L1/r/M0lL5P8leSL8EX4N42dpXax+muobar+bLXzCq/ttdWfonYhcYJa
XfVnql1AXIEvV3+G2vnq/8fzqn8L19P967H+dKye/qxT8/rJJG8hebz0DSVv
IHkv/JOebzPJb0j+QvJo1q3kAruJf5F+iPpnq72h39xD8gU1+0385amSg97p
ON17T/yZ5LrRz3Kk5Gslbxz9W7pIPkVyIXms5D2IjyRnrDHJu0u+QHKsrsfz
/Y6v1/221vN1kzxc+rWj19JBkvtLxhFfWdmLayRvFL1WsI+XSV4r+tu0kfyL
+rtiH3S9drwP6TeMXnvYz8clHyh5meQ7E3/PczR2WeHv/YT0raR/W/o5kp+W
3Ebyu5LnSv6f5HaSP5R8j+QROr+D7vehrrGZ5P+kayJ5hK53seSrpT9C8nfS
by95nOTOkr/Fj2Fvdb31dc7k1PZigvSjpf+g8PwcJv2a0WsHe/2v+ttKPxwb
IflT6S/XsRbYTskrdf5J0j8m/Y46dqD+Pqy2vfpT+H267+NcW/Ljks/Tub00
/j7iJR1rqr/3qm2l/iXSXyz98dI/qGPb6tijzA8da0Ssi3+QfI7kLSWPlvyg
rv+Ixu4geZ7kS6RfI3qt44/elnyp5GbS3yf5fclHSf5e+hckT5VcP3ot9JZ8
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
Dh95t/SbZubc5lbxOVwzMQO8Nfj6CYn56wt13lq5fQE+AZ5468JcMz7ypGj+
7evcfBd4RDO1jTJzQvD4xF9NEvP5Z6tf5I4liCleJtdVq5OYP4b/miL5r9Sc
LLYdG797YbwV3HSPwlgTPgj+86HCvgnOca6ufVBuPHVYZqyW+BwsEcwWXLZZ
YSwGHwLfdT/5SWbOlFiEmKRHYTwXfrZDbl8GZwufeVTu2AuOF2y2dWGsD4y2
t673aOG1wxqibgE+q03i+gX495PVWmfm5F4vXBtA7NRD8rho/ob3xPs5Npo/
eDd3vQLxIHzMz5lrAOCLFxSOTeCI8cX45B0K46kvVe+3M7+1et9w9d8lPrZE
1zpV7djM+dFi6V4r/CytuB54frn686+OWeHz/9Lf9plrAF5njepvu8x8CPza
RmplZg6rKTFJYX4eTvmG0vjfr7n5izUlr1GaGyVG2FP9PUpjWefxDKzv0twZ
fCJrrSZ5UuY1x1zi/MmZ59Tu6u9WmssjBiWWIKbYsTRn3Vx/m5XmuonB5ql/
JflEaT4OPRw43Pcc6XcqzXHCbXL+XYXPR0cNCvejBgB7OF/yhGi+YXjumAVf
dwX5deXzpkbjcY+RD2aONXqSz1Yxx9/6O176fqX58iP1t0tp7pEagdWxnvT/
FfYRxJrEnLwTcpbbo/ko8jBi0sPAk0tzlZdInhiNN16p+w/OHDPCJ4PtwTEz
r1Idm1DNr0z9t6X/LfEx4h/4racK15TwveB04XLvqXwunD5cPvx2Y/Ubla4d
IKble4P1JKm/GXMD/czMc4S5w7ualnkOzZR+c8m3ZY6PsWPMhwcy2zOej+cF
Cydn2br0OYydUd2/gVr91PeAf92COZOZs51VGv+l+OjgxHU+8INwb2tW8w8O
Ge6Ye86Nrr/gPly/Xunngxsn/sH2MX95F9hAbC3zkbmBzSUeIUbZv3QMwbMw
92ZlfqZtS3PCcMEcw/ZuWDreZxES+5MDwBPDDxO/b8Dv550nfh5isQ1Tv7OZ
0fUS5LXE+PgGxt6c2UdcGHw+dSLUh7xerf93EudoM3X/fXPzUXDoCyt8AG6J
HAquFs4WfBacFm4UjhR8FpyWeVZf7ePM8w1s/6jCuBR4FNzCOTXjTOBLB+S2
7+QGYOAfVngAsRcxGLhj88KxP/gj8REc7lrSDcmNi1L7Q24CProfvl/yxZk5
+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
XhlqMcE8yeeoyWSvJHsmyQfZ+/R/f+KQSA==
            "]], Polygon3DBox[CompressedData["
1:eJwt1nuQj1Ucx/HH7u+3K6zbuqVIug4NpVLoNkmpbIqJbpgof1TWnS6MMClJ
JWFSCNVQul+oSE1CKbdqpRblmiQJW2Ftr2+PPz7zPJ/3+ZzznOec85zznNq7
f5finCRJHqEs5eQnyY/0cG6S1KQnKiVJhv+JRvO1aCK2Jy9JvscG8kc0MByr
wAbRAWxQJkkex6pFPewoNhSbjB3hi2kfNgB7DDvIb5B9AKtMY7ADWAl2P59P
o7F6/GT8BPUepJlYATYWOyYzDHsWK+cH0H5sIDYeS+Q20iisBk3AfvfSN8t9
xF9Hc8Xe5M+TW678cXWb0x/8GNlC5evk1tOjWKN4Z/drZboah5EyjbHB2Baq
Kr9X7iFcJFkTWfoc+4FGui+gTeqOkzlb3Qf5n6mh/GqZ7fQG34H2yNWt7P3l
1rkfoE5/eosOyeV6SIZ6qjsHO4D9o96/1Bl7kp9IZe5/kNtIf/ETZJtiW+W2
0UFsPtYNe4rPkduHjcim6+Rb7Dt6mynDs8rzqJey1/nn9a+R8WsS7dIRbJnr
YOUvqFdf9m9sIXY3NjXGAfuE/wev7r4G9VO2FPsXq8nXomLsU+wwVpsvpP7Y
Rqyj576mrRbYWOxY9Nd4dYn5oZXYn7Fe8Druv5ctofKYH7kbZW6iFfEt8Jvx
Ce5bYufGGPC5eAf3V9MiZUe19wU+xP0MbTXA38Pej/Vhjt7hL1O+kO+qfy/J
XS/XCavK52vvdpk7qERZNawy1iPmkTZg76j7Np2vzoJ4Z+0WxHcg14tfFs/A
qvK18U3qfOMZfeI7Uac+1j/mjM+NZ8g9rb2W7kcApfgzcjXwOrHOs2lZFb6W
uu21vVKmN81Wbw4dNr8z+Aq6V+Zl7IQYb6qIdYO9GmPA/yJTR34x9iF2E1ZE
nYPxG/A+7nthd9J+bBxd7blfxhjEfqQvM5W103YD1xOpOjbKtSDmQa481iGW
0d5qbIV6t2GrZC7CXuR38/cpK5Bbkk3vn8N34tM8s7XcrPjW+Ac8fy7WHDtH
riqeUWcF1Vb/XNfzaJiyQn798fs2rm1jjalXDx/ofhBtUfZKzGNe+h6Fse4j
J1Ml9lTsK6wfVi73dTb9Bk7Ul4Z0DPsmm34DJ/EnUyV1S7CR2Jn8WbFf8b/K
LtFWN1qobAe2C/uAv4HmYZPju8xP95//9yF1j8rtDs73pOVxNujbb9hKvjet
wR6Ta4Y/FAuKTnaZhLXCxvBVqHmSzk8TbAhfkZPO1ZTYX2lL7Gex32XSPbJB
7Nv8oZx0v/yAbyu31tp4EmidSffh0/DhcmU56Z4cY7dHbhXWNzcdx3FYdWyK
uvWjj+rOUPdCfDxfm9rCs7FNck/wjWNssFexzdjTfFPqHudCzF+cP/yZ1CPG
DyvFHuHr0eXYIuxnbBrfLPqTpOvsF2x67E256Zpbjm3FZvKt4nzEhupbpfz0
bIoz6hDN5+dR3Wy6XmLdDJfLzU/P5ziny+h9rA22BpvoXS+I9Ytl89MzO87u
v6kQ+x1bHf2gzdprz3+GXx/7AP0o39a1Hc1XvtOzp8d+6dpebp56rWkEth3r
gr3LX0nPYgu09xo1VnZSnK3YrOgb7TVnRfFu2v5J+XXqLoi5yE3/Q+IbuiL2
k+PjEt9TfAcXY7OPj198E0nltD/Rh9O1dQZNlanvGbP0/5Q4f7E1Mpfic2Mu
M+kZVBHvn03PjUZYY1rLXxb7s9xpmXQ//1juI+qhrCv+LrZM5qr4J/KMzlhR
/MNgNbCpWAOsEnYr9hc9jBXzpbGO4p+ERmH94vyNMVNvKXYtPymYskuwnbHn
K+8Y/xtYO34HvcVfQ+uwTjGm6naLd6ftWN/4F8pL/7/iP2y37F384bz0Xyv+
uXbEd813UL8UuzHWPX53/Kvlpf9L8d+0C78lvn0aht0TayPmRb1t8Y8Qa55W
KFsvUxR9dN896sV5bY4Wx55ozlu6tqD/AE30VCA=
            "]]},
          Annotation[#, "Charting`Private`Tag$4928#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0jtIVXEcwPHf9dG9PspwaAkSodXGpsKKokAJDFyyh14s0yyxSamhpYdT
TUYtDZmbTYlCU+YDNQiz69WyNKSh1rxUDuXn0HD4fn7nnP89/8O5tdmeM9dT
ETHkuFgUkfiEbmh/acRuveXkba7huzzAB7gsHfHQfJir+Qk38l4e4hbezy+4
i8d1ztp+nuBFvs9veZUf8RIP6ynr1nmUm/gHT/K3HRE93GaPi+bzumluL474
YL6kOb2sS9qheZ0qiah37zJP8xFe4Rk+yh/5mF5x/yc+zp28yi3cxZ/5qn7R
bl3Ta7qePNfv9NpH1r1fzRe0YN5jv+/NPznDb/g7b3nfl7zGz7XeO+Z4kA/y
PN/jOn7NfTyms9Z18gi/4rP8jEe4gR/zUz7EGWsfmOv4l2ff4X2c5YK22mOV
ntObrhV7l13mlO7Uf85X6l+t0AXv2Mzl/I6buCz5fnyaM9ygW4508g31j8Pj
4qT+dpQme1FLoqAeFX1O5rko+W4u3Ej9/y9uA2suVz0=
        "]]}, {}, {}, {}, {}, {}, 
      {GrayLevel[0.2], 
       Line3DBox[{757, 880, 2071, 758, 887, 2077, 774, 894, 782, 2097, 901, 
        790, 2098, 908, 798, 2101, 915, 806, 2105, 922, 814, 929, 2084, 822, 
        936, 2090, 830, 943, 838, 2110, 950, 846, 2111, 957, 854, 2112, 964, 
        862, 2116, 971, 870}], 
       Line3DBox[{759, 975, 976, 2072, 1127, 977, 978, 2078, 1131, 994, 995, 
        2081, 1135, 1005, 1006, 1139, 2156, 1016, 1017, 1143, 2157, 1027, 
        1028, 1147, 2159, 1038, 1039, 1151, 1049, 1050, 2085, 1155, 1060, 
        1061, 2091, 1159, 1071, 1072, 2094, 1163, 1082, 1083, 1167, 2165, 
        1093, 1094, 1171, 2166, 1104, 1105, 1175, 2168, 1115, 1116, 871}], 
       Line3DBox[{760, 979, 980, 2073, 1128, 981, 982, 2079, 1132, 996, 2125, 
        997, 1136, 1007, 2131, 1008, 1140, 1018, 1019, 1144, 2158, 1029, 1030,
         1148, 2160, 1040, 1041, 1152, 1051, 1052, 2086, 1156, 1062, 1063, 
        2092, 1160, 1073, 1074, 1164, 1084, 2145, 1085, 1168, 1095, 1096, 
        1172, 2167, 1106, 1107, 1176, 2169, 1117, 1118, 1221}], 
       Line3DBox[{761, 585, 1225, 983, 2074, 1129, 984, 2121, 985, 1133, 998, 
        2126, 999, 1137, 1009, 2132, 1010, 1141, 1020, 2136, 1021, 1145, 1031,
         1032, 1149, 2161, 1042, 1043, 1153, 1053, 1054, 2087, 1157, 1064, 
        1065, 1161, 1075, 2142, 1076, 1165, 1086, 2146, 1087, 1169, 1097, 
        2149, 1098, 1173, 1108, 1109, 1177, 2170, 1119, 1220, 599, 1222}], 
       Line3DBox[{762, 1226, 1227, 1179, 2171, 986, 1130, 987, 1182, 2172, 
        988, 1134, 1000, 1185, 2173, 1001, 1138, 1011, 2133, 1188, 1012, 1142,
         1022, 2137, 1191, 1023, 1146, 1033, 2140, 1194, 1034, 1150, 1044, 
        1197, 1045, 1154, 1055, 1200, 1056, 1158, 1066, 1203, 2178, 1067, 
        1162, 1077, 1206, 2179, 1078, 1166, 1088, 1209, 1089, 1170, 1099, 
        2150, 1212, 1100, 1174, 1110, 2152, 1215, 1111, 1178, 1120, 1218, 
        1235, 1234, 1223}], 
       Line3DBox[{8, 504, 1884, 23, 509, 1889, 38, 514, 1895, 53, 1432, 519, 
        68, 1446, 524, 83, 1460, 529, 98, 1474, 534, 113, 539, 1907, 128, 544,
         1912, 143, 549, 1917, 158, 554, 173, 1523, 559, 188, 1537, 564, 203, 
        1551, 568, 218}], 
       Line3DBox[{766, 242, 1774, 378, 243, 1782, 388, 254, 1798, 398, 1799, 
        264, 408, 1809, 274, 418, 1818, 284, 428, 1827, 294, 438, 304, 1836, 
        448, 314, 1845, 458, 324, 1854, 468, 334, 478, 1863, 344, 488, 1872, 
        354, 498, 1881, 364, 875}], 
       Line3DBox[{767, 884, 2075, 768, 891, 2080, 778, 898, 2082, 786, 905, 
        2083, 794, 2100, 912, 802, 2103, 919, 810, 2108, 926, 818, 933, 2088, 
        826, 940, 2093, 834, 947, 2095, 842, 954, 2096, 850, 961, 858, 2114, 
        968, 866, 2119, 974, 876}], 
       Line3DBox[{769, 1276, 1277, 2076, 770, 1283, 2194, 1284, 779, 1292, 
        2196, 1293, 787, 1301, 2198, 1302, 795, 1310, 2199, 1311, 803, 1319, 
        1320, 811, 2109, 1328, 1329, 819, 1337, 1338, 2089, 827, 1346, 1347, 
        835, 1355, 2206, 1356, 843, 1364, 2208, 1365, 851, 1373, 2209, 1374, 
        859, 1382, 1383, 867, 2120, 1393, 1394, 877}], 
       Line3DBox[CompressedData["
1:eJwVz0srhGEcxuG/xjA2GBunjcHGYMOwcdo4bRwXjsUYlFMs8EFkQ0xkSqkp
pZRSUz6KL4LL4ur3Ps/9bN5M4Wz5tCoitkgkIr75qXZIRlylIn59F6lxriVJ
Hde2lD7aGrSReppIU3Lfoq1setus7bTxbMvojftO7aCbLl5sWb219WoP/fRR
tg3qnS2nAwwzxKttVMcYYYJ778b1zTal00wyS9E2o++2eV1gjiUebIv6YVvV
NVbYYJ1P93l98m5Ht9mlQMV2+P//tiM94IRjvmwXesk5e877/AHyiSWD
        "]], Line3DBox[CompressedData["
1:eJwN0LErxGEcx/HvnVM6NjeeQTmTWBSDgbKQ6cfmMujuxjsLFouU4RgYlCwW
2Wy222z+ACIiIiKiEzF5De8+v17P0294uudrSTUVEXMqtUScqtoasaCaDtoi
iuxEf5mIX5X5Fi/ZGd7QD/9Wkc1qih3rizU1zRKNsyN9sg9NsgmNsENt+u87
f9MYH9UgX+X79pW/aJgPqY/t6pk9aYD1a8/9Hr6tR/6gXr7BCzbP67rnd+pi
dWd5m+NruuU32uE53qkOvqJrnvAr286zyvBFrfNLfqE0T6mZ9q7OztmZltmS
Kr7/ATs7NBI=
        "]], 
       Line3DBox[{869, 970, 1389, 2115, 861, 963, 1272, 853, 956, 2191, 1269, 
        845, 949, 2190, 1266, 837, 942, 2189, 1263, 829, 935, 1260, 821, 2214,
         928, 1257, 813, 921, 1254, 2104, 805, 914, 1251, 797, 907, 2185, 
        1248, 789, 900, 2184, 1245, 781, 893, 2183, 1242, 773, 886, 1239, 756,
         2213, 879, 1236, 1400}], 
       Line3DBox[{872, 972, 1275, 1219, 1121, 863, 965, 1216, 2181, 1112, 855,
         958, 1213, 2180, 1101, 847, 951, 1210, 1090, 839, 944, 2143, 1207, 
        1079, 831, 937, 2141, 1204, 1068, 823, 930, 1201, 1057, 815, 923, 
        1198, 1046, 807, 916, 1195, 2176, 1035, 799, 909, 1192, 2175, 1024, 
        791, 902, 1189, 2174, 1013, 783, 895, 2127, 1186, 1002, 775, 888, 
        2123, 1183, 989, 763, 881, 2122, 1180, 1230, 1229, 1228}], 
       Line3DBox[{873, 654, 1224, 1122, 2117, 864, 966, 1113, 856, 959, 2151, 
        1102, 848, 952, 2147, 1091, 840, 945, 2144, 1080, 832, 938, 1069, 824,
         2162, 931, 1058, 816, 924, 1047, 2106, 808, 917, 1036, 800, 910, 
        2138, 1025, 792, 903, 2134, 1014, 784, 896, 2128, 1003, 776, 889, 
        2124, 990, 764, 2153, 882, 1232, 596, 1231}], 
       Line3DBox[{874, 973, 1123, 2118, 865, 967, 1114, 2113, 857, 960, 1103, 
        849, 953, 2148, 1092, 841, 946, 1081, 833, 2164, 939, 1070, 825, 2163,
         932, 1059, 817, 925, 1048, 2107, 809, 918, 1037, 2102, 801, 911, 
        1026, 2099, 793, 904, 2135, 1015, 785, 897, 2129, 1004, 777, 2155, 
        890, 992, 765, 2154, 883, 991, 1233}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1401, 1622, 1882, 1930, 878, 1929, 1928, 1985, 2213, 1559, 
        1402, 2071, 1560, 1403, 2029, 2072, 1767, 1561, 1404, 2031, 2073, 
        1768, 1562, 1926, 2033, 2074, 1769, 1563, 1883, 2171, 1624, 1770, 
        1564, 1884, 1626, 1771, 2005, 2122, 1885, 1628, 1772, 2153, 1565, 
        1927, 1630, 1773, 2154, 1566, 1405, 1632, 1774, 1567, 1406, 2075, 
        1568, 1407, 2062, 2076, 1569, 1952, 2193, 1953, 1954, 1886, 1570, 
        1634}], Line3DBox[{1408, 1635, 1887, 1933, 1934, 2182, 1932, 1931, 
        1986, 886, 1409, 2077, 1571, 1410, 2030, 2078, 1775, 1572, 1411, 2032,
         2079, 1776, 1573, 1412, 2121, 1623, 1777, 1574, 1888, 2172, 1625, 
        1778, 1575, 1889, 1627, 1779, 2006, 2123, 1890, 1629, 1780, 2007, 
        2124, 1413, 1631, 1781, 2155, 1576, 1414, 1633, 1782, 1577, 1415, 
        2080, 1578, 1416, 2194, 1955, 1579, 1956, 2195, 1957, 1643, 1891, 
        1580, 1783}], 
       Line3DBox[{1417, 1644, 1892, 1937, 2130, 2060, 1936, 1935, 1987, 2008, 
        2183, 1418, 894, 1419, 2034, 2081, 1784, 1581, 1420, 2125, 1636, 1786,
         1582, 1421, 2126, 1637, 1788, 1583, 1894, 2173, 1638, 1790, 1584, 
        1895, 1639, 1792, 2009, 2127, 1896, 1640, 1794, 2010, 2128, 1422, 
        1641, 1796, 2011, 2129, 1423, 1642, 1798, 1585, 1424, 2082, 1586, 
        1425, 2196, 1958, 1587, 1959, 1298, 1660, 1897, 1588, 1800}], 
       Line3DBox[{1439, 1677, 1898, 1676, 2139, 2064, 1438, 1961, 1960, 2198, 
        1437, 1589, 2083, 1436, 1659, 1799, 1658, 1435, 2135, 1657, 1797, 
        1656, 1434, 2134, 1655, 1795, 1654, 1433, 2174, 1653, 1793, 1652, 
        1432, 1651, 1791, 1650, 2133, 1431, 1649, 1789, 1648, 2132, 1430, 
        1647, 1787, 1646, 2131, 1429, 1645, 1785, 1005, 1428, 2097, 2012, 
        1427, 2184, 1939, 1988, 1938, 1989, 1426, 2063, 2197, 1662, 1893, 
        1661, 1801}], 
       Line3DBox[{1453, 1692, 1900, 1691, 1965, 2200, 1452, 1964, 1963, 2199, 
        1451, 2100, 2014, 1450, 1675, 1809, 1674, 1449, 2036, 2099, 1808, 
        1673, 1448, 2138, 1672, 1807, 1671, 1447, 2175, 1670, 1806, 1669, 
        1446, 1668, 1805, 1667, 2137, 1445, 1666, 1804, 1665, 2136, 1444, 
        1664, 1803, 1018, 1443, 1663, 1802, 2156, 2035, 1442, 2098, 2013, 
        1441, 2185, 1941, 1990, 1940, 1991, 1440, 2186, 1962, 1679, 1899, 
        1678, 1810}], 
       Line3DBox[{1467, 1703, 1902, 682, 2201, 1466, 1966, 1319, 1465, 2103, 
        2016, 1464, 1690, 1818, 1689, 1463, 2039, 2102, 1817, 1688, 1462, 
        1036, 1816, 1687, 1461, 2176, 1686, 1815, 1685, 1460, 1684, 1814, 
        1683, 2140, 1459, 1682, 1813, 1031, 1458, 1681, 1812, 2158, 2038, 
        1457, 1680, 1811, 2157, 2037, 1456, 2101, 2015, 1455, 1251, 1992, 738,
         1454, 2187, 679, 1901, 1693, 1819}], 
       Line3DBox[{106, 532, 812, 107, 741, 813, 108, 814, 109, 1151, 431, 110,
         1152, 432, 111, 1153, 433, 112, 1154, 434, 113, 435, 815, 114, 436, 
        816, 115, 437, 817, 116, 438, 117, 818, 118, 819, 119, 1199, 536, 
        120}], Line3DBox[{1481, 1709, 1904, 1970, 1969, 2203, 1480, 1968, 
        2109, 2066, 1479, 2108, 2018, 1478, 1702, 1827, 1701, 1477, 2044, 
        2107, 1826, 1700, 1476, 2043, 2106, 1825, 1699, 1475, 1046, 1824, 
        1698, 1474, 1697, 1823, 1044, 1473, 1696, 1822, 2161, 2042, 1472, 
        1695, 1821, 2160, 2041, 1471, 1694, 1820, 2159, 2040, 1470, 2105, 
        2017, 1469, 2061, 2104, 1993, 1995, 1994, 1468, 2065, 2202, 1967, 
        1903, 1704, 1828}], 
       Line3DBox[{1482, 1710, 1905, 1944, 2177, 1590, 1943, 1942, 1996, 2214, 
        1591, 1483, 2084, 1592, 1484, 2045, 2085, 1829, 1593, 1485, 2046, 
        2086, 1830, 1594, 1486, 2047, 2087, 1831, 1595, 1906, 1056, 1832, 
        1596, 1907, 1705, 1833, 930, 1908, 1706, 1834, 2162, 1597, 1487, 1707,
         1835, 2163, 1598, 1488, 1708, 1836, 1599, 1489, 2088, 1600, 1490, 
        2067, 2089, 1601, 1971, 2204, 1972, 1973, 1909, 1602, 1837}], 
       Line3DBox[{1491, 1716, 1910, 637, 2188, 1946, 1945, 1997, 935, 1492, 
        2090, 1603, 1493, 2048, 2091, 1838, 1604, 1494, 2049, 2092, 1839, 
        1605, 1495, 1065, 1840, 1606, 1911, 2178, 1711, 1841, 1607, 1912, 
        1712, 1842, 2019, 2141, 1913, 1713, 1843, 938, 1496, 1714, 1844, 2164,
         1608, 1497, 1715, 1845, 1609, 1498, 2093, 1610, 1499, 1347, 1611, 
        1974, 2205, 698, 1914, 1612, 1846}], 
       Line3DBox[{1500, 1723, 1915, 1949, 1265, 1948, 1947, 1998, 2020, 2189, 
        1501, 943, 1502, 2050, 2094, 1847, 1613, 1503, 1074, 1848, 1614, 1504,
         2142, 1717, 1849, 1615, 1916, 2179, 1718, 1850, 1616, 1917, 1719, 
        1851, 2021, 2143, 1918, 1720, 1852, 2022, 2144, 1505, 1721, 1853, 946,
         1506, 1722, 1854, 1617, 1507, 2095, 1618, 1508, 2206, 1975, 1619, 
        1976, 2207, 1977, 1724, 1919, 1620, 1855}], 
       Line3DBox[{470, 336, 1267, 642, 641, 2190, 1509, 2023, 2110, 1510}], 
       Line3DBox[{479, 345, 1366, 706, 705, 2208, 1516, 1621, 2096, 1515, 334,
         1514, 2148, 333, 1513, 2147, 332, 555, 1210, 331, 554, 330, 1209, 
        553, 329, 2146, 1512, 328, 2145, 1511, 327}], 
       Line3DBox[{1530, 1752, 1921, 1751, 1980, 2210, 1529, 1979, 1978, 2209, 
        1528, 961, 1527, 1737, 1863, 1736, 1526, 1103, 1862, 1735, 1525, 2151,
         1734, 1861, 1733, 1524, 2180, 1732, 1860, 1731, 1523, 1730, 1859, 
        1729, 2150, 1522, 1728, 1858, 1727, 2149, 1521, 1726, 1857, 1095, 
        1520, 1725, 1856, 2165, 2051, 1519, 2111, 2024, 1518, 2191, 1951, 
        1999, 1950, 2000, 1517, 1372, 1739, 1920, 1738, 1864}], 
       Line3DBox[{1544, 1763, 1923, 718, 2211, 1543, 1981, 1382, 1542, 2114, 
        2026, 1541, 1750, 1872, 1749, 1540, 2054, 2113, 1871, 1748, 1539, 
        1113, 1870, 1747, 1538, 2181, 1746, 1869, 1745, 1537, 1744, 1868, 
        1743, 2152, 1536, 1742, 1867, 1108, 1535, 1741, 1866, 2167, 2053, 
        1534, 1740, 1865, 2166, 2052, 1533, 2112, 2025, 1532, 1272, 2001, 752,
         1531, 2192, 714, 1922, 1753, 1873}], 
       Line3DBox[{1558, 1766, 1925, 1984, 1396, 1557, 1983, 2120, 2070, 1556, 
        2119, 2028, 1555, 1762, 1881, 1761, 1554, 2059, 2118, 1880, 1760, 
        1553, 2058, 2117, 1879, 1759, 1552, 1121, 1878, 1758, 1551, 1757, 
        1877, 1120, 1550, 1756, 1876, 2170, 2057, 1549, 1755, 1875, 2169, 
        2056, 1548, 1754, 1874, 2168, 2055, 1547, 2116, 2027, 1546, 2068, 
        2115, 2002, 2004, 2003, 1545, 2069, 2212, 1982, 1924, 1764, 1765}]}}},
    VertexNormals->CompressedData["
1:eJx0XXdcj+33TzIeZMsehYQQMuO5ECEje+9Q2WRvZZVNdsheIdmkY4QkpLSU
JpWmPYvf/el6n/vp8/n6ff/x+p7X9ZzzPuc61/uc675P98d4wswBk/T19PRO
FNfTK6z822BMdrDldU+RctWopN2z4eKupdm0gNwc0axo3wGFlgSLnMSrL+LX
u4nWNFc/r3mOiEnusW/2uRgR7FU8OeTqZdHExLyMm1+mcLs9Zrh9XLJYOuD+
tyMDronsir3P10lPE0t8zVMpJU2kt/v9vuXd68K8+5BuF2OSRdDDjIG9n2SK
wtbHzt1MOi12XLe8d+pWjGjesN/Ck6Y5wnJx1mnDQt7i0gr3uSdmBYsPL2od
qPopR3QNf9fj6XVvMX6kUZ7fs+F+vN5Bez0FQ39N6F8r9dNS4EnTxkNbgH8Z
8GdI/NTy6Zxaay/HiP1Vas5M6HlRJJtse5t0P5P6r3zSo87iYLGvutfybHsP
sdVzxqaizXMoc7SM52DteJL1liWvl7w+LRxcX9GSd3vEr9T2ATUUf6ovPj5j
8enHIsQ9993Ea9dF8+Vjsve3yBHhRt997xtEC/trkw3uVAkUVHfear+XmWKg
41unkB+JwmbKqC8d+r0QBveq2t43eCcmh/7MXOaeIsZ9zb4QfSVctH3f5KbX
p2Qx5ejvJiE/3gnbPTYvAhR90yZOLXMnIEYE1bBxulA9U1yxm+W2tnyM6Lf9
zaGtyn6HH2rWT2On9uDdd+8q647uuDzlQ7qTXzDWX8X6/nI9TYP+XtA/Seon
xjNWGw+NBP7ewP/nbj5+eg1/HeGvv/SX/kV83iM+zWR8qCniOVg7nnT2MYlW
KYdF+fgKzd7NPqHG+Zvxs3Jt790VDkafWwd2fajGuVFn9yArBcfAT/bdNTg5
zo5x2ydUT4wSsz71i/dsES+KIM7rZhqN3K/8/1obZrnN2ZIs2iHOXSeNKKTx
6/lbe5flit/TEWezIxX6bHNOFlcvPGrebGKa6I44j7PNG6n574rUHZSg0WsT
65MU0WKcH6+/gvU9Eefu0B8K/faIsy6eNojzLOBfDPyFJH5qCn+HaftLhiYy
PmsQH47zQcTzd5xWPOnHwvTgxZvcxIfCtzsXzzurxjnDt1H7aiNOi6S+/T7c
DXiixjksZsKPccr+jS5W5ukaJX84ztcqHZnZWrFrc3VOpe2K3xznwXcXVHqg
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
pn5SzueFq7YHNXa5vqdZmt2aqJznejOGTdLg5H6m7ab2jjeU83/Od0kVjV/2
8JflFyC3hr/vdPTw/vaF3fOwy3w4HzjXASfX97OVmuf7tVfbL/rmUDVP8/7m
5dpxpQrur9ucdus0/VDrNsNKFcxnk0/tUjX90yarEZM1eTUe/jabL3Zr+Pqx
x+ShmjzEPVFs7z95sYbfS9VMuKLhe9S1/09OFtATBD3M/7VhdyPssr+MsyNw
cj4nwy/S9osWP/LJ0LxHWfxLeLQqcH7Nfa/30tTLbtldJir9kbq/xqXXf9f0
T1HT9XxNFd7gfN6X17aMph73DqYbLxWe4f3NezClnqZ+D7dytzVUeGkI/M2F
fAjkveDvfujpAz2cz3VgNxJ28dyJLIDTGjg5n53g1xRtv2iPuU9DzXP2IRUn
z1m6yU31t3hn2Q9dNsqreWDggA68v4XdZf+kh/+xv7not/xW2N3ynL/Qj/mq
8U3Zn/k3+5mX3s/Zj/OZ5f3Tjwxod9fJj/lZVw/ncyHYvbhnq8e3D4M78Pk1
BM5LwMn5vAp+WWv7Rfsg7yPlpLu/HWTc1PpeF3F+LuPMfYXgfekq94XY3z/Y
x75yH7lPU/fdDnLe3wPQYwM9nM/1YDcEdifo7G9n4Oyo429bbb9oiXY+q/6u
x7loI8+F2q/W0T5H6n3EQvv8Ep/fHdrnVPXXQ0fO9aj53/WQsY5d9ncrcFoB
J5/fKdr5rPpbyFGe6xfyXKv+LgfvrZK8p/o7GTx5TvKkur9/wKsmklfV+1c/
8LC35GGaDH8HaPM2dYa/eTp6OJ8n6djlfHYBzrXAyf6mg6/8tP0iY/dZlTW8
fUnytupvfdS10bKu0b/wdyXqYKqsg2p/HpWuVTfV+3V0B1lnH8g6S9Pgr668
J/zV1cP91QrYTYFd5ucGwDkWOPn87vznsZHGr33aflEy6vIFWZdVfyto9y3E
/UY99DmvZZ9DXI9c0RcVepbfF/E9UWSjjzou+yg1n3N05APh72ro0YeeF3x+
YTcWdnl/qwBnJ+Dk/X0Ev/Zq+0Ue6LuMZd+l+nsRfelH2ZeqfNUXfexN2ceq
59cGfe9P2feq95HZ6JNbyT5Z3d85kLeEnO9f/48eYrt+sMv+cp//BTjZ31Xw
q6y2X6SHvjoF94gk2VeL7biPNNS+j1Dxcj4BmueJh+5sLjlLuc/xfa3es8pm
mjnFy2Lp0fsBT0QnvDc0O7MlTPPectGo1b08lP//0cnXsUL8cL/6WO+N9f/i
veEY6P+srZ9edWmyVPNcz2J9vFmscq9iu9XmGQ3RzO0FpWwZp5kjtYPdWVty
f98zeCf2tN0y//CnZHEM79+rY/1jrOd57KrWUv9Sbf3k1LTMN3PXvcJty6Uf
mnsY260yz6W0Zo6tpImZvk/1TMYvHjgNbk0BMSLUVC9L8770GOaFjP6+nu5B
/1tt/dRpgW8nC+W+59/13OOCdq91tZzye9Qm/8N2+XNeoi3sjvAcfqpvrc3+
Nf9o/pcjbuH97Ez/jn9bT7ugv1Y3Lf3UcsW7epr76nUfuyMxBeKc6/vkimae
oFqdDp6a972YrxYbMQ92D++hT2DuvfAlub4q1vOc8Azo178o9fNzgCDzQSaa
5wKJe0+vnVEgr9Yc2JimmXuofTP1lOZ9Ps8LtcTcmhXeZ/P+6q7n9/61m0j9
bfZp6adcPH+p71xrtvO58R3YbqmBo0dp5jPkHMYTdf6c5/F4nkbOn8/yK4n1
U7TX0ygTqZ/7N/Y3GP6+lv6Srt3hUg/ZwA7P9fH801H4y+vHYz3PvZvA3+b7
tPRTC8T/mtxf0o1zLRk34ny21I4zcZzXYX1N7fW6+6vaHaGdz6rdIsiTyjJP
iOfPdyKvMN9AB2G3uM76PrB7HvprdNPST11wvtbL86XabXgmbmqBc0HtYfeK
c6UzBc4R5tDs/XavitFaz+doD/SnQT/vbwj4qq3kE9Vu3lzJA+UkD6h2vcEb
UZI31HkhffBGWe31VBJ85QL9bFcf/Hld8qdqtwJ476XkPeL588ngyeOSJ8ka
+VwW6yO119MI6C97V0s/GYPPEySfq/rrg/9PSv4nu2Eisv2WwX4mWB+pvZ7S
/j3YotI6b7Heo9Sc1KuLRC7q7wfIIyHn+pUCudHOfDnx+izIJ0HO609T8sH8
ufyyuXOWnn6szhe99O/x9kyJDLF97oNzGyr6UH3L99eD8xLErnLuhWc3zBZ/
olv6za95ln6nHz3kWz1cdJk67utLyhG/X0WvuuHuTRuNh3+zPegnukJePUbK
naWczsLubNidjHmYPdDf7JXU/0fqJ/2Ov2fkunmKWPMV49bccBJ9HcKKPMrN
EazHVuoRM4A/HPibSvzCFPhZf2OJXzD+F2dsyoWPyxKVC1UWTZfcFBXji81M
WhYlHt/JXj1kc7YwTi7f+rP7LbH391Fj72svhDX8Mpf+Cvb358gx9RcNzxHO
x7pfLt3FT8zosTMqctYDUa2tYe55Zb31ramdLJR1YZ923La+4q3Gpwf0cHx0
10fK9ZQL/fOgv4/Ur8ZthLZf9EgH/3mJn84jbv0RN56vC0McGiEOJWQcKAzx
rId4NpDxpEEfW8ymlxkitFx1/wZGN0Ri/VHB4kschUCPm9RDRojnD+BPkfhp
JuJTBf5ekv5SFPx9CPw7JH66APyMxw35yXhc6jVJ6qzEdfg/sVdPPXESCaYh
E8prnqtAXrxEvpwgF93/3Jyqyat3g7dq8oo2Gb/U5JW6vra2HrEwd8U0zXrD
xJSxmjys/zU/D6m1/q+5GvntP0vz9cwoF5qfn67QY61tl3qff9Xq0P6XwmYn
ebuG+IomT6pe1MwvRIffPK35O5Mlphfq1B5xWv07kYxB5lPDOwQI67gZH6YM
VPzLfta388Yc4dBsZ/Pra0NEieyXvx+ODBLNoKdXt/EzNH9H4anX37Ddvbuq
nr1ZO2Y5DPAX3Q+WfOSo/Mt6Ljosaeo/9J74t+Oyc44lw1Q8Dz/anZhw7bpY
sqLdT818Gesp07f+WAcFh6ljg1saXKznlOn2F9XfOvs3D6i2rJfS3zOe44Wf
Ngp7NsW/34L8eVtVT4h98oZ5ljto1bdJjkP6PlD1/KrdvQ8NvUdbLs9w1OBp
Cj0tMDeb18D8QEE8dY6ec10WcpU6F0+9597gnqqnbssXHkp8aP7FL0U08WG/
9mJet9H0Y5PaFohPo0bRWcp/T+1X//q5NOSqqmeUTbfhyn5R++HlO60qsF93
MCcc9GpIbPUC+9XmxMzZij9U261ZCWfLHaqesdDTWuoh1nMbeoKlHnWONG7C
ci8lvnRgRdoWx4HexHpM4Ndc6RdxnPdr+6XqGXMzeZCy3xT58laSsv+qnj/a
cVbxtEKcc2WcVT3hF87ecVJwzBoVvkaDi/U0m9ssVLPvFnLfifdr8eKAxpp9
t5P7ruopeW7J+llKXG4PXLRYEyfWcxx52FnmoYrnGvJwpcxDVU+efc85mn2q
0utJlQ3KvrGe8TgXFeS5UPVY41wcl+fiv/nzt593a/LmxZ2xpZYrecR6+oPf
mpXP5zd6J/lNMK96gJf2oy7o8lg4eP6nDu/ZgbeZbzeCJwuDbwfA7h3wKtsd
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
09chWTHi+ZLvjVe2fCeO7fq0LHJ9onC/cnLu5Z2JwmDLtBr7m74RZ/Stv5/r
8UZcmBPcZcvQN+LtxtHtJrSIFecg94E8RsrpuI6ewlIPjYPdHrAbJO3SI+Cs
DZw9JE6q6z/4WHzCTrFn9NgPCyedEZ6nz1y1Uvzq+HDawuDgAJEbYG6U1zha
jFxiV7Tll0zxOuOG5dtiz8SRGTdvJzVOEr1NVmwYJt6JP9fXWl/NChW2elGb
LNNSRLVtO+t5d3wjvvb6k1gqI1x8FEVTHdami8F2PYvv6RsrfkD+GfI+Uk56
N6SeXtBTVeqhN7B7AnZ7SrvUCTgLPZA4h0ucpKc37q/f3Vq9toXRob2L/B9m
FW9h2DJG/K5R8tu4b5liiPvtOLelLv6PCw8Pb3EsWYw2v2toZ/1OjPlocax4
v3X+0V/2WycGpInnRpuH3OjyRjSa13VZtt4G/xofbc2e+2SKWalxTcsPixWF
9HycNN+HPILvrLZTf6c74WTB77LexPckC+nd+dt66lHHMl9/Leh3kvopuHnn
fDyvgOeZxEND9LPz8T8F/hESP33zHpDv7zP4myf9pUJ6ZRsV+D6J+t0bPb07
Ff/2ewSH3OYZVrt6hZx6u5SKbR4kam5rVGShZY4oXGL5p6fBAZT59fWj3AJ5
ctiyyLDUYs9opl+LNZr9skWeNM5Y6nktK5Rux3rYaPa3BvJk4MDZs0tnhNPd
+6s8NPkwEnlyxS3F+3ViJDn22hlhH5IpRu9vuHG0Z7C4i79jXSf/fkysqW/n
XebxZL9bWO+gvZ4GQf996B+IfDMHHn/g4Xw7Cfxzgd8G+VYE/n6GvyOQb36I
z0bEp5qMD/14Edk8MWEnbWxe6FCB80UXMx7vr1wkgB7/mtJP+VdcNR4ZZNQq
R5jN7FH/XN8wymj76W14AT7ZXinruH10DOW0mldSc66fgk98943Uj1qfSD3W
e72/VIBPdodN33a+xxvyOVnuzGaFN9LAJ4Mad73paZhCQzw6Oij/irsdij6b
dDJYlOys/XtRZlNSbrgPHe03EOsHY/19uZ72QL8v9MeDly4Bjy3wFAIv7QT+
T8D/BLzUGP5+gL/MS08QnyTE57KMD7la7V+g8C95WZ5uXICH6XrsuFZK3OlQ
zXY9ql69ouSVzM9ctzGDS06Jpqez6+f51Hkg7k81rReenCn8v0zr9rx3Ev1o
OzXcZvoz8dKubenU2gqPdVvj/lYvlWzGbXp+pHaYaN+kTmhgJSV+xYoc/3db
OtltK/K+qlGEyLKcWqayQaxoUMy98MSQTHpo+yEsNjFSjER+tjfbfl7zd43u
Zm1vbV0ZJSqvzTOpPGyinynWP8L6McjPdOjvB/3JUj/p2WjjaSPx0F3g/wb8
YRI/6btLf5/B37vSX4pEfPwRn+rIzy49LAKVvKQjgUZTE5Q6wPk5AvLzUk5c
FzieT6R+4njeBp53Eg9FIp76wN9Z4ifgF+/gr630lzieGZD3gfwN4lAIeqyh
py3icB92v8NuCOJQ2F1r34nj4IH88ZX5Q1zHGyIPM2UeEp+7LcjbDJm3xHX8
iva5I32dc3dBngvKwLnbq30eKRHn5fLf9dBe2P0Mu1zHmwBnDnDyeakWKnnm
oOQZdb8MtfmZmJ/Pgd+mSX6jXuBnS/DhLcmHxHV8NPiTJH/SKPDzGG3eJuZV
1uMHPcyrV2F3Dux2B69WAM5PwMl1fFKDSVUK1Gv6g3o96N7sBE29C5L1jrhe
b63d84SmPkbJ+khcr8/Z311RoF7TbNRrlqPOkiPqbN6Y4ScK1H3WQwNhNxh2
uc5ey7KsUqDOUi7qbD+fXJcqynnzmCrGaM4f101T7b5F3Rc/9DmnZJ9DXDff
ob/qK/si4roZhz7qq+yjaCj2ZWSJ3J8xCr8MurvcQsM3g8BLYeaHY7cofDTA
62Kshp9m2pUrPbLECL8xWD9Qez3FQ/936O+H/c0Ann7AUwX7S8B/Bvi5T2sK
f4vBX97fqYjPVcSHeenjbdmXrpd9Kecz3ShRqoimHri/MkvV1AeumzfQ3zaQ
/a16fnugH7aT/bB6fj3RP2+X/TOhfxZe6Levy36buG5WzG1dUVP/6t21NTyg
1MMA1E3TRtdSDij18qht9xRN/cw7fPmIXvNJfuWxvj7WP0DdPAz9N6A/GTxw
CHg8gEcPPNAb+AcCfzB4gOBvY/jLPBCK+BxDfLhueuD+MlDeX5j36NjNo8kx
Sr/i8fliqKZ/4bqpj3tQYef8exA9kPcgMQX3pj7y3kR8/wrCPWukvGdRIO5f
nc2KBAz0TBeOhulnhpeOoNpFyh0qnhAjim/2Oq3pz9wexayJU/o17uvMWg4c
oOnnnlSfvHC70t95Nf7k/3vEeD9evx7rUWfJGvodoL+S1E9PgWcU8ATg3sf3
xwHAPwv3vuLwtxT85XvfQ8TnIuLD+TkA99ae8t5KuLfSmrCRjVy/RIotq3x8
m84LEC6LBn062D5LlHi9cWi5NYmiXaWJ/QZffC4+ZjqfbOHxTsSY3IxZsypF
jAuoVadRfKj4lTJ7d7bvG9G8+L/TirZOF3vX39teMSlcdG80fVbI4tfiSnGP
24/3ZoqU5r+mhz6JFElzBt6NMgwRRw8f6Vp8Y5bwWf2tTlWXKJE481OpwuGe
wnTXsvRzuenCoueHPmntI4TzhtdRMR1f0bL3F+M6an4P7NyoSzfGhomZ2X12
lO+TTDuXuWVVKZMsPtVbWcym+nNRgUwcG6xMozKTR7/0zn0lfBb9M3Kv10PR
ZtSi5ZvmZdKnH+eXLd7zVJwKdn513+aaKHxw2T2TP9lk9zK6VqKPj6jwKGrl
73J7xY+JgSnVM3PI7oRzc/OG0aKWo4ndmxOvRMND7z9utkoXDTpvH3T5ZoKo
92pj2JSMBFHfdGORx5PeilM5r/X3XE4Wd652rVAoKlnMX3B7knv1ePGiYZMD
Yy6+FYMSR3Y59eCtqHfQYEn90BfCZvWuLoN3poiJUYcWz9mbIp7bhXseTPYW
+y3a2tqvTBJ/nk5t7jYoSVRyW9ExaHcSxbpVGFLWOk6crrqimknEazF6Q1G/
Plmp1Lfp9/YP20WIyNSUs97PXop69R91vlQ/k2rsaBphNO+xGGzVoO/3UYHi
W6vfCxfdz6braaE3Z469IKo+nb/avPo58ejOzsWDk3NoS8CClp47XggH7+W7
Kyx8KwLKxy+8WSJFLNGfW7/Bh5eit0g4VHfeOzGzc67piP4JYtmhGrNfdo4U
ZVqsLtW/sbLP9w16r1wTJkaF2+00nhwlfj17deXEvCzxfsfVnvcOXREDdj5v
O1PvhXCdGtb7Z5s34lrr8JiKfVJpYNBO6+BHQeJSr+qBU3/FioBD1Zt9upVB
pZTOK/Gmv7B+/cGzSuAL8cv96uTAFdm0dtHCuCpdjgmLg3HdQ+Ovil7/+J8O
isqhSgNjwp432yWq3U5faHw9QTinNp133iaDSuD5uYfO34lvvzNugZL/9Mo/
qWeTeQHE+b/W423trVsSyTmy2+j3M59RvdO9fMYefyfuLX1osnZVCk2Ja/HU
LD6UfiL/HW94+Sv5Tx6fSxSvkBROXZH/X1c2qhy0N5MWfrGhkCeR9Br5P3tw
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
xjwKxH7pW7VfMvaNUdhPlqn9pLGP+h9/+zIp
     "],
    VertexTextureCoordinates->CompressedData["
1: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
efTn9bvp3w71XV6eYj1ke6X9qvpL8ryL/vzZon4X9dVf8g+2mL9sn1zONZ6X
mL9sn7x+N8znJfi7jP6SPGV7pP2u+lM7bg+zPfL6+enr/UX0l9yRq+hP+2H1
l9q7iv5UX/15/S7qq780Pi+jv7R/zfYmtfdl9Jfa+zL6U3315/W7qK/+9FR/
yd5k+6L9s/pL7b2K/lRf/Xn9Luqrnx8cCHgV/SV+X0d/aX/3OvpL9vd19Kf6
al/laj/xp/3bYvqXhx/uB/4H4MfDPlD4me1rV9PPBn0vfG72YzX9nUE/C/+Z
6fu6iINxn536/Wiq/Z/bo83Az/uB3X40KM/7aI2P26su7In2d39+aOD7wX96
/5PADwYs/u4O9kH4V4d5Ej+KTwjL3oj+RM9PArt9alDeRnui3+3TonjeGZ6i
72ywL8Jvmb2qI14iLHsl+pL+/jSw27cG5W20J3rdvi1wLsa8+/L5HbN3dcRv
nP6HQV/Sx0uML/eDeT+q9kTvnaFf0efndrwXsBrkrw78ntnLunjKXoq+1P8X
gd2+Nihvox3R6/Z1gXND3ltYhX0U/juzt3XEt4Rlb0Ufn26fG5S30Z7o/Y7Z
5wXOLXmvQvlM28BPzV7XEW8Tlr0WHWm8t6CL+9O8P1Z7otfte86HJ/bxvYQ8
XAZ9iv+5XLRBX5rPPI7uHzQob6M90fuO+QcLnKPyXsoq7Lv7hV3Qp3iksPwF
0ZfmJ9Pv/kWD8jbaUz/uX+R8eWLRJ/9A2P2NOuKjwvI3RF+yly8Du3/SoLyN
9kSv+yc5f55Y9NHvdn+ljnitsPwV0Zf67wO7f9OgvI32RK/7NwuceyxwbrYK
/8Ttx6ugL7W3Dyx/R/Sl/veB3T9qUJ7jLKLX/aOcJ0Us+t4Y/B1ff68hr9dB
j+y+6HHcIv7dhT+levK/PD7M/bf+eE6/Aq6BN4H9/Tnen+P9Od6fQz9dxPuO
a+AN4r0LxG9XwDXwBvHaBeKvK+AaeIN46wLx0xVwDbxBvJR5eCvgGngT2Plv
wH8D/hvw38T7Hn9cAdfAG8QbF4gfroBr4A3ihQvE/1bANfAG8b4F4ncr4Bp4
g3gdz+FXwDXwpsCef5Tz/LT+uH78XC6fs3n9vF48/zPne6o+18c3TK5yPqe3
n9eD+7c5X1P1Kf/uX+Z8TKcny7v7dznf0vXaFu3v0P4O9Gd5dv8m50uqPuXX
/YucD6n6lNckJ9n+Cqs+5dPta85nVH3Ko9u3nJeg+pQ3ty8NcF3Yn0TvTZQ7
3gC3RXsu35vYjwp3tv/O3xER9voN6reon/P50q8dyjdh31wf5PjE3yeDGPbO
25shXqzzubMo97yAGeK958P6+GmU+/2l2bA/q6L+e7bfVNxgEfhbw35X9Z/Z
fm+G/egM8dJzzOsM+8EZ4p3n2O/MsB+bIV55jv3GDPuhGeKN5/D3Z9iPzBAv
PIe/PcN+YBZyoPru785iPQrL31Z99zdn8IdniLfpfCCf57g/Oiviay5/Og+8
F1jxJddf2T782tCu8D8O8un0vY/xfxDtM28i1fso2qN9+c2hPeHfH9oTTvvf
jwP/8SD/Pt8/wXz9LPpXPEhY8SW3J9l+PR7aE/7ToT3htJ5/AX+2wvr4FOvx
s+hf8R5hxY/c/mT7+MbQnvC/Du0Jp/XyOezLAv0voQ9W0b/iOU7fw2iP9veD
oT3hXxnaE07r9VFgnb/4+vsC41Xuk1x+n6C9bN/XQ3vCbw3t+Xjl9+8O+kf9
J/qz/lG8Rf1LPwkrvuPj/xTykPdNvze0J/z8QO9zrL9n0b/iKz5/Ob9A+k9Y
8RsfH/onW8h7xncGveHjucP8ZP2peIn6l371+Wvhf9H/yf2pPWHFb3z/mPW1
4iO+/l9E/9LfwveG+Iu3l/2rs6E9p/cF5D+/n9rN9kDxD9c/L6N/2QdhxVdc
XjL+9tCe8LtDez5/uf4PBvui/hXfEE795vwE2R/hsyF+ovaO+4c99NOXkLc9
9FW2Z4pfCCteof75VHzE28v+53eH9pzeV5Df/P77g31M7Z8X+XryL4XT8xr2
rswT9fl9DXnK8Q8+1Z6v9+9Dnn8Y9E6O/s0Qt5ghDjFDXGE2mhcjzLwR9SQ6
mMfHvDrmuTHvjHlIzAsSPcLMm3H+K/Bfgf8K/FdF3hvzoJiX5ONTFXk7Y3En
4bG4kPBY3EZ4LK4iPBb3EB6LSwh7nk7Ou/H+GIfLcTXGyRj3YhyLcSnGmRg3
YhyIcR3f5zLOwrgJ951jccUcJ2Tcj3E8xuUYZ2PcjHEwxrUYp3L+GDdiHIj7
6LE4aY7jME7DOAzjLIyjME7COAjjHIxjME7BOATjDM7fWN5zziNmXi/zbJn3
yjxI5iU6vczTY5yhBT0t6GlBTwt62iIPk3mRTk9b5A1O7K+Dfuqgnzropw76
qSvyQJmX6fqmK/IWvX9+d4XfOeF3RfidB35Xgd8x4HcD8n21ZE+YN848buZV
M8+ZecfMA2ZeLvNkmbfKPFLmdTLPknmNZZ4+8+KZp868ceZxM6/a+duDv32R
B8y8XOdvX+StMo/U+SvvGYg/xp0ZV2bcmHFhxn0Z12XclnFZxl0ZV2XclOdg
/v7H4X8pz0VYeSRenvPslQchrDwDr5/3TTp3Fj4b9hXCOjcV1rmksOdVzSKv
NM1XzvsUVlxBWPt6Ye2rhbVvE9a+SVj7FmHtG4Tllwt7XKRCXCLnbQr7vjzn
6Qm/afucnOcmnObzNd7P596Ks/m5Qs7TYp4T84iYp3M8D+Y56jPPP9s3zb8w
z815Lu1x7wZ5Wy3yolrkHeU8WGHPm2mRN9EiL6HFuX+Lc/W2uOfr85/zfIV9
/nOerLDPf4f57zD/Hea/w/zLHuV9n8e9FEfPcSmPQ2n9bLGe8z0Xxm08TnNe
xFE8bnJexDU8jsE8/lmcc6hcccFUXkVcTtjzmqqISwl7Xk6FvJcKeSUV9uXn
06thH61y5flNhudYXp3wWB6b8FjemNcv87SEx/KihMfykITTs8z7EU7TcR38
35bX6nmOzCO8LW/vtjy52/LSbssDK/Ouvj6vaTWaByN8W56u6y/mTTIvsR7k
ZywPsMy7S+3lvDzmuTGPTOtP2PVhHfPt9L8OrHMg7z/nrbo9YV4l8xbLPEHm
4THPTfpE2O3NBvq6nv7FoB+P98e8PubNMS+N9mqD9hvMX4v5ajE/Leanxfzk
774Ie94p8zqZN8m8ROb9Ma+uzNv29V/eo+E9Fz+H6XFO2+NcpC/ukfg5RV/c
+/Bzg764p+Fx/B5x9L649+Bx0h7n6D38zz38zz38z33Mv7D7o+W5i9avMM9B
eA7h9nMPf3aPOHNf3FPgOS7P/bR+hbV+fb/Dc6e839F68v1Ni/3JS8S5rxB3
z+fOyrPgvfCxvMC0TpiHkPMMmEfAPAHmAfCc//g5ft7vqP9E/3n0L6z+hdW/
l+e8A/UvrP6F1b/jfE/Sx6MCpr9S3eK/VLf4L9Ut/kt1i/9S3eK/VLf4LxUw
49H8bkL+Hq/sG+9F8N7B8bz+7H8wL51536LPcf5Og9NTg54a9NSgpwY9Neip
QU8NevhdiBr0MK+OeXPMi2PeG/PamLfGvDTGZ8s8QOb5MY+PeXrMw2OeHfPo
nB7eI25ATwt6WtDTgp4W9LSgpwU9LehpQU8b9KTfO6znDuu3w3rtsD47rMcO
66/DeuM96i7okf1xfdhDH/bQhz30YQ992EMf5rit4/wdEqdnD3r2oGcPevag
Zw969qBnD3rK756InrE8GeapME+EeRrMk2Ceguhh3lb6PX9nQzjRV36HQtj3
QzkvUfaH3+1Qe8L8roXa83LRVwHzvLMCvRXorUAvMf+fIf5/LCuUMy+1zCv1
8jKvmt8tEf3C/K6Ht9egvRbttWivRXvMiy3zVPndFB/fDuPbYTw7yEOP+e1R
vkd5/j7qWF4EvxPD74Ykd/d9yOdpYPn7wsqbdfnL32HSdx2EnwGnPK0HkL/8
3aYfW3/V6D1g4a+/57vCPVx+t6mZnlo8In8Py+c7f+fJv/vA7zx1GK98r1fz
ye9IHP+OR5kXI6x513jyuyNp/5b1g99bqorvkozduxL+z0M7P47x/Pp7WKug
X9jjxTXGm/ewNnh/g3gLz6sb1G9Qv/zOio9HV3x3xce/Qx5VH/wKq76wn4/s
I6/Xz6vKPCXm7Wq+hTWfXl4BL4Z4Qc6X8Xsnq+lv23pYobwG3ky/afU3sX6F
x+61aLydvg789LE+hb18///OY3a5mEXepsZPdAnrOzA+nnk/5nmRFeRE+Uz5
Xr7yojW+4kuY9/CTuukx/vkeftrv5/wNj2e2oU98fLN/+q7R34Heq6BXdDKP
W/QJPxno83hED/8s52XrHoTGm3nSuvegcuYtKw9b4/3PA9Z43hn4EuZ3A3gv
P+nHnP/D7wjwnj7vwfv5Hu8V87sEvNfPe/MN6G1Bbxt57Zo/z3Pvizz3jY3n
Hue7iq99Cv9gifn8AvGuHJ8Sv7zHoPnx89VNkZf6V9BPzI/z89ry3q7jpri3
8BvD+2N5rKJT9KjfifW7As73bDTujpnPme8BqX3XPznepfZY39vpRzDjVjlv
0f3lFXAd2PUT88sbtN+i/Rbtt2ivBZ28903MOBX543cASv3q9WvUr1F/7By4
Cux8btDeBu3luDbbI3/H53WPccl5SY7PC3l2+9einHn1PfAe73Ncsj11OSnt
6dfPA+WUclXaV/Xr9VeQwxp4U8ipsLef33c53hRyLezjukD9vK78PcphA9wW
cp0w446MazGudIX5o1z2mK8xuW0x7l2BNd8+DuW8+DiW83R83GvgdmTcxsYx
x9Mc57xlX28LyP+qWA+Oc76Ij9+YHvm/62Vvt/xuzXE9NK7H1Z7o83m73U45
PeN2kXpA9Dm+Ah2lHfX1Ve53XW/x3mZp1znPlIPb5t3543c6bv9uh/ffFXrZ
y3McVONzm94WfRwXzrvo+x8zMPXe
     "]]},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{239.84434171182698`, 482.27508550293885`},
  ImageSizeRaw->Automatic,
  Method->{},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.1474219431113084`, -1.4937757587741451`, 2.811059740910071},
  ViewVertical->{1.1091145710891288`, 0.11907117652147249`, 
   1.6598523666894254`}]], "Output",
 CellChangeTimes->{
  3.806990720512783*^9, {3.8069908077979736`*^9, 3.806990843483389*^9}},
 CellLabel->"Out[94]=",ExpressionUUID->"4a11e7de-6ee8-4fca-96c5-c7ef619bdf91"]
}, Open  ]]
},
WindowSize->{958, 1028},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
Magnification:>0.95 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 3899, 96, 245, "Input",ExpressionUUID->"5e61d268-cdab-4b77-a61d-5465a2ffbd3a"],
Cell[4482, 120, 4210, 110, 158, "Output",ExpressionUUID->"269eef8f-0fbd-4b5e-beee-5a9a0a7698cf"],
Cell[8695, 232, 6484, 179, 179, "Output",ExpressionUUID->"cb2b5778-bcb8-46be-a51b-c262767c90ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15216, 416, 6713, 175, 388, "Input",ExpressionUUID->"7c7959d4-edb4-442f-9c05-d8e5e9aaf1ac"],
Cell[21932, 593, 19244, 560, 846, "Output",ExpressionUUID->"a81e58b5-f481-4d0e-ab88-1f1dc833400b"],
Cell[41179, 1155, 20571, 573, 269, "Output",ExpressionUUID->"7bf8627b-76db-4b74-958f-4c618a6ec313"]
}, Open  ]],
Cell[61765, 1731, 9054, 237, 532, "Input",ExpressionUUID->"8ebbb874-15eb-4be3-93dc-ff00effb1623"],
Cell[CellGroupData[{
Cell[70844, 1972, 7771, 186, 316, "Input",ExpressionUUID->"4fa55618-4fbb-4927-93d8-578a365c33ad"],
Cell[78618, 2160, 1417, 32, 150, "Output",ExpressionUUID->"dcc28a62-350f-4f1e-a68a-f56241393672"],
Cell[80038, 2194, 11605, 221, 233, "Output",ExpressionUUID->"8d199b97-1f8d-4885-a0ee-54bbaa6b1843"],
Cell[91646, 2417, 25820, 437, 358, "Output",ExpressionUUID->"932482a0-fdd5-4359-9cc8-372820350927"],
Cell[117469, 2856, 119273, 1947, 507, "Output",ExpressionUUID->"4a11e7de-6ee8-4fca-96c5-c7ef619bdf91"]
}, Open  ]]
}
]
*)

